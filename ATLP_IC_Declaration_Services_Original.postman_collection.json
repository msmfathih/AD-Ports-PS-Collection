{
	"info": {
		"_postman_id": "4c10e78d-10a7-4277-84b6-488235e7c2b1",
		"name": "ATLP_IC_Declaration_Services_Original",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14307462"
	},
	"item": [
		{
			"name": "Token and Profile",
			"item": [
				{
					"name": "SetAuthCookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    //console.log(\"working\");\r",
									"    \r",
									"    /*\r",
									"    if (!pm.response.json().status(201)) {\r",
									"        postman.setNextRequest(null);\r",
									"        console.log(\"All other test cases can not be executed as we couldn't generate the cookie\");\r",
									"    }\r",
									"    */\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"{{userName}}\", //usernames are shameem.pilathodan/OSAFFOURI\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/token/SetAuthCookie",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"token",
								"SetAuthCookie"
							]
						},
						"description": "This API to generate the token/cookie and saving the cookie. This must be executed and save the cookie before exexutes any other API in this collection/project"
					},
					"response": []
				},
				{
					"name": "AddUAEID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/AddUAEID?uaeId=784197735942753",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"AddUAEID"
							],
							"query": [
								{
									"key": "uaeId",
									"value": "784197735942753",
									"description": "784197735942753/784197453740405"
								}
							]
						},
						"description": "This is new API which is added by MG team to update the user profile by providing the emirates ID which is already presented in customs DB."
					},
					"response": []
				},
				{
					"name": "GetAccountInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Collecting the company Code from response\", function () {\r",
									"   pm.collectionVariables.set(\"companyCode\",pm.response.json().companyCode);\r",
									"});\r",
									"\r",
									"pm.test(\"Collecting the UAEID from response\", function () {\r",
									"   pm.collectionVariables.set(\"UAEID\",pm.response.json().uaeId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetAccountInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetAccountInfo"
							]
						},
						"description": "This will fetch all the profiles which logged in user (based on the cookie/token saved) have access.\r\nThis is same as \"GetCustomsProfile\" API from TAMM services"
					},
					"response": []
				},
				{
					"name": "GetCustomsProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							},
							{
								"key": "UCode",
								"value": "{{userName}}",
								"type": "text"
							},
							{
								"key": "CCode",
								"value": "{{companyCode}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetCustomProfile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetCustomProfile"
							]
						},
						"description": "This will fetch all the profiles which logged in user (based on the cookie/token saved) have access.\r\nThis is same as \"GetCustomsProfile\" API from TAMM services"
					},
					"response": []
				},
				{
					"name": "EligibleCenters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"CustomRegCode\": \"C031\", \r\n    \"ServiceCode\": \"17\",\r\n    \"DeclarationTypeCode\": \"\",\r\n    \"CenterType\": \"\"           \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/EligibleCenters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"EligibleCenters"
							]
						},
						"description": "This will fetch all the cusotm center codes which logged in user (based on the cookie/token saved) have access.\r\nThis is same as \"GetEligibleCustomsCenter\" API from TAMM services."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "LookUps",
			"item": [
				{
					"name": "DeclarationTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//Available decalration Types are Import, Export, Transit In, Re-Export, Transit Out, Temp Import\r\n{\r\n     \"ServiceCode\": \"17\",\r\n     \"RequestTypeCode\": \"Z\",\r\n     \"Importer\": \"\",  //importer/exporter code\r\n     \"ClearingAgent\": \"\"    //user of the Applciation\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/DeclarationTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"DeclarationTypes"
							]
						},
						"description": "This is lookup to get all the list of decalration types. This is same as \"GetDeclarationType\" API from TAMM services."
					},
					"response": []
				},
				{
					"name": "GenericLookup",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var lookup_array = [\"CENTERS\",\"VESSELS\",\"COUNTRIES\",\"COUNTRYCODES\",\"SHIPPINGAGENTS\",\"BILLTYPE\",\"PORTS\",\"CARGOTYPES\",\"IMPORTERS\",\"CURRENCIES\",\"ALLAGENTS\",\"UOM\",\"CITIES\",\"EXEMPTIONS\",\"EMARA\",\"FUEL\",\"VEHICLESPECIFICATION\",\"BODYMAIN\",\"GCCCOUNTRIES\",\"VEHICLECOLOR\",\"POLICE_COLOR\",\"INTENDED_OF_USE\",\"BODY_SUBTYPE\",\"BR_MATERIAL\",\"TRUCK_PLATE_COLOR\",\"TRUCK_COUNTRIES\",\"TRUCK_PLATE_CATEGORY\",\"TRUCK_TYPE\",\"TRUCK_SUBTYPE\",\"TRUCK_CATEGORY_TYPE\",\"TRUCK_POLICE_COLOR\",\"DOCUMENTTYPE\",\"EXITCENTER\",\"COUNTRYCODES\",\"ORIGINDESTINATINOCOUNTRIES\",\"UNITOFMEASURES\",\"DEPOSITS\",\"CASHDECLARATIONTYPE\",\"PASENGERCODE\",\"JOBS\",\"CASHDECLARATIONFLAG\",\"TRANSPORTERTYPE\",\"PURPOSETYPE\",\"JOBNUMBER\",\"HSCODES\",\"ORIGINVALUATIONREQUESTTYPES\",\"PASSENGERTYPE\",\"REMARKS\",\"DUTIESREFUNDTYPES\",\"VEHICLECOUNTRIES\",\"FCAPORTSMFP_PORT_REF_CODE\",\"FCAPORTMFP_PORT_ID\",\"BANKS\",\"BANSBRANCHES\",\"VEHTYPES\",\"VEHSUBTYPES\",\"FCAPORTSUAE\",\"DECLARATIONREMARKS\",\"DCMSHIPPER\"];\r",
									"\r",
									"var array_length = lookup_array.length;\r",
									"\r",
									"pm.variables.set(\"lookupType\",lookup_array[_.random(0,array_length-1)]);\r",
									"\r",
									"/*\r",
									"CENTERS\r",
									"VESSELS\r",
									"COUNTRIES\r",
									"COUNTRYCODES\r",
									"SHIPPINGAGENTS\r",
									"BILLTYPE\r",
									"PORTS\r",
									"CARGOTYPES\r",
									"IMPORTERS\r",
									"CURRENCIES\r",
									"ALLAGENTS\r",
									"UOM\r",
									"CITIES\r",
									"EXEMPTIONS\r",
									"EMARA\r",
									"FUEL\r",
									"VEHICLESPECIFICATION\r",
									"BODYMAIN\r",
									"GCCCOUNTRIES\r",
									"VEHICLECOLOR\r",
									"POLICE_COLOR\r",
									"INTENDED_OF_USE\r",
									"BODY_SUBTYPE\r",
									"BR_MATERIAL\r",
									"TRUCK_PLATE_COLOR\r",
									"TRUCK_COUNTRIES\r",
									"TRUCK_PLATE_CATEGORY\r",
									"TRUCK_TYPE\r",
									"TRUCK_SUBTYPE\r",
									"TRUCK_CATEGORY_TYPE\r",
									"TRUCK_POLICE_COLOR\r",
									"DOCUMENTTYPE\r",
									"EXITCENTER\r",
									"COUNTRYCODES\r",
									"ORIGINDESTINATINOCOUNTRIES\r",
									"UNITOFMEASURES\r",
									"DEPOSITS\r",
									"CASHDECLARATIONTYPE\r",
									"PASENGERCODE\r",
									"JOBS\r",
									"CASHDECLARATIONFLAG\r",
									"TRANSPORTERTYPE\r",
									"PURPOSETYPE\r",
									"JOBNUMBER\r",
									"HSCODES\r",
									"ORIGINVALUATIONREQUESTTYPES\r",
									"PASSENGERTYPE\r",
									"REMARKS\r",
									"DUTIESREFUNDTYPES\r",
									"VEHICLECOUNTRIES\r",
									"FCAPORTSMFP_PORT_REF_CODE\r",
									"FCAPORTMFP_PORT_ID\r",
									"BANKS\r",
									"BANKSBRANCHES\r",
									"VEHTYPES\r",
									"VEHSUBTYPES\r",
									"FCAPORTSUAE\r",
									"DECLARATIONREMARKS\r",
									"DCMSHIPPER\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/GenericLookup?lookupType={{lookupType}}&searchString=&skip=0&parentId=2220&take=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"GenericLookup"
							],
							"query": [
								{
									"key": "lookupType",
									"value": "BODY_SUBTYPE",
									"description": "BODY_SUBTYPE, TRUCK_SUBTYPE,BODYMAIN",
									"disabled": true
								},
								{
									"key": "lookupType",
									"value": "{{lookupType}}"
								},
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "parentId",
									"value": "2220"
								},
								{
									"key": "take",
									"value": "10"
								}
							]
						},
						"description": "This is Generic lookup to fetch the any lookup data by passing the keyword for all the lookup values which are providing by TAMM."
					},
					"response": []
				},
				{
					"name": "GetCompanyCategories",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"getCompanyCategories\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/GetCompanyCategories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"GetCompanyCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "GenericLookup_Vehicle",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var lookup_array = [\"AXILS\",\"CYLINDERS\",\"DOORS\",\"STEERING\",\"ENGINE\",\"COLOR\",\"VEHICLE-SPEC\",\"REMARKS\",\"AGREEMENTTYPE\",\"TERMOFSHIPMENT\",\"TRANSMISSION\"];\r",
									"\r",
									"var array_length = lookup_array.length;\r",
									"\r",
									"pm.variables.set(\"lookupType\",lookup_array[_.random(0,array_length-1)]);\r",
									"\r",
									"/*\r",
									"AXILS\r",
									"CYLINDERS\r",
									"DOORS\r",
									"STEERING\r",
									"ENGINE\r",
									"COLOR\r",
									"VEHICLE-SPEC\r",
									"REMARKS\r",
									"AGREEMENTTYPE\r",
									"TERMOFSHIPMENT\r",
									"TRANSMISSION\r",
									"DOCUMENT_TYPES\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/lookup/VehicleLocalLookup?lookupName={{lookupType}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"lookup",
								"VehicleLocalLookup"
							],
							"query": [
								{
									"key": "lookupName",
									"value": "TERMOFSHIPMENT",
									"disabled": true
								},
								{
									"key": "lookupName",
									"value": "{{lookupType}}"
								}
							]
						},
						"description": "This is Generic lookup which is created in our local database to fetch the lookups which are not provided by TAMM."
					},
					"response": []
				},
				{
					"name": "HarmCodeList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data.GetHarmCodeListResult.HSData.HSDetails[0].HSCode);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Section\": \"\",\r\n    \"Chapter\": \"\",\r\n    \"HSDesc\": \"\",\r\n    \"HSCode\": \"\",\r\n    \"UoMCode\": \"\",\r\n    \"DeclarationFlag\": \"Y\",\r\n    \"Skip\": \"0\",\r\n    \"Take\": \"10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/FZLookup/HarmCodeList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"FZLookup",
								"HarmCodeList"
							]
						},
						"description": "This is lookup to get all the list of Harm Codes. This is same as \"GetHarmCodeList\" API TAMM generic APIs."
					},
					"response": []
				},
				{
					"name": "GetMaterialList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].ChemicalNo);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/MaterialList?hsCode=31021000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"MaterialList"
							],
							"query": [
								{
									"key": "hsCode",
									"value": "31021000"
								}
							]
						},
						"description": "This is lookup to get all the list of materials for HarmCodes. This is same as \"GetMaterialList\" API TAMM generic APIs."
					},
					"response": []
				},
				{
					"name": "OriginExporter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].HSCode);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "/*\r\n{\r\n    \"PageNumber\": 1,\r\n    \"PageSize\": 5,\r\n    \"GetOriginExporter\": {\r\n        \"HSCode\": \"85071000\",\r\n        \"CountryCode\": \"KOR\"\r\n    }\r\n}\r\n*/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/OriginExpoter?hsCode=85071000&countryCode=KOR&pageNumber=1&pageSize=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"OriginExpoter"
							],
							"query": [
								{
									"key": "hsCode",
									"value": "85071000"
								},
								{
									"key": "countryCode",
									"value": "KOR"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						},
						"description": "This is lookup to get all the list of origin exporters for the HS Code types. This is same as \"GetOriginExporter\" API TAMM generic APIs."
					},
					"response": []
				},
				{
					"name": "FTA_SubItems",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].HSCode);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/FTASubItems?hsCode=24039930",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"FTASubItems"
							],
							"query": [
								{
									"key": "hsCode",
									"value": "24039930"
								}
							]
						},
						"description": "This is lookup to get all the list of FTA Sub types. This is same as \"GetFTASubItems\" API TAMM generic APIs."
					},
					"response": []
				},
				{
					"name": "BillTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/BillTypes?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"BillTypes"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Bill types. This is same as \"GetLookupDetails\" API and lookup id is 5 from TAMM services"
					},
					"response": []
				},
				{
					"name": "ChargesType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/lookup/ChargesType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"lookup",
								"ChargesType"
							]
						},
						"description": "This is lookup to get all the list of Charges types. This is same as \"GetAdditionalCharges\" API from TAMM services"
					},
					"response": []
				},
				{
					"name": "CargoTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/CargoTypes?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"CargoTypes"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Cargo types. This is same as \"GetLookupDetails\" API and lookup id is 7 from TAMM services"
					},
					"response": []
				},
				{
					"name": "Currencies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/Currencies?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"Currencies"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Currencies. This is same as \"GetLookupDetails\" API and lookup id is 10 from TAMM services"
					},
					"response": []
				},
				{
					"name": "ImporterExporter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/ImporterExporter?searchString=12920&skip=0&take=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"ImporterExporter"
							],
							"query": [
								{
									"key": "searchString",
									"value": "12920"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "10",
									"description": "Server side Pagination"
								}
							]
						},
						"description": "This is lookup to get all the list of Importer/Exporters. This is same as \"GetLookupDetails\" API and lookup id is 9 from TAMM services"
					},
					"response": []
				},
				{
					"name": "Ports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/Ports?searchString=&skip=0&take=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"Ports"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "10",
									"description": "Serverside pagination"
								}
							]
						},
						"description": "This is lookup to get all the list of all Ports. This is same as \"GetLookupDetails\" API and lookup id is 6 from TAMM services"
					},
					"response": []
				},
				{
					"name": "Units",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/Units?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"Units"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of all Units of measures. This is same as \"GetLookupDetails\" API and lookup id is 24 from TAMM services"
					},
					"response": []
				},
				{
					"name": "GCCCountires",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/GCCCountries?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"GCCCountries"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of GCC Countries. This is same as \"GetLookupDetails\" API and lookup id is 33 from TAMM services"
					},
					"response": []
				},
				{
					"name": "PlateColors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/PlateColors?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"PlateColors"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Truck Plate Colors. This is same as \"GetLookupDetails\" API and lookup id is 44 from TAMM services"
					},
					"response": []
				},
				{
					"name": "CargoAgents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/CargoAgents?searchString=A91&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"CargoAgents"
							],
							"query": [
								{
									"key": "searchString",
									"value": "A91"
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Cargo Agents/Shipping Agents. This is same as \"GetLookupDetails\" API and lookup id is 4 from TAMM services"
					},
					"response": []
				},
				{
					"name": "CarAgents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/CarAgents?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"CarAgents"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Car Agents (the code which strats wit 'V'). This is same as \"GetLookupDetails\" API and lookup id is 11 from TAMM services"
					},
					"response": []
				},
				{
					"name": "ClearingAgents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/ClearingAgents?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"ClearingAgents"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Clearing Agents (the code which strats wit 'C'). This is same as \"GetLookupDetails\" API and lookup id is 11 from TAMM services"
					},
					"response": []
				},
				{
					"name": "CenterCodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/CenterCodes?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"CenterCodes"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Center Codes. This is same as \"GetLookupDetails\" API and lookup id is 1 from TAMM services"
					},
					"response": []
				},
				{
					"name": "PlateCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/PlateCategories?searchString=&skip=&take=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"PlateCategories"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": ""
								},
								{
									"key": "take",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the list of Truck Plate categories. This is same as \"GetLookupDetails\" API and lookup id is 46 from TAMM services"
					},
					"response": []
				},
				{
					"name": "Vessel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/Vessel?searchString=&skip=0&take=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"Vessel"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "5",
									"description": "Server side pagination"
								}
							]
						},
						"description": "This is lookup to get all the list of Vessels. This is same as \"GetLookupDetails\" API and lookup id is 2 from TAMM services"
					},
					"response": []
				},
				{
					"name": "BodyType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/BodyType?searchString=&skip=0&take=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"BodyType"
							],
							"query": [
								{
									"key": "searchString",
									"value": ""
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "5",
									"description": "Server side pagination"
								}
							]
						},
						"description": "This is lookup to get all the list of Body types. This is same as \"GetLookupDetails\" API and lookup id is 32 from TAMM services"
					},
					"response": []
				},
				{
					"name": "StorageType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Lookup/StorageType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Lookup",
								"StorageType"
							]
						},
						"description": "This is lookup to get all the list of Storage Types. In-house service and made static values."
					},
					"response": []
				},
				{
					"name": "CurrencyRates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one lookup value\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].Code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://10.0.131.21/ATLP/IC/API/api/Customs/lookup/CurrencyRates?getCurrencyRates=",
							"protocol": "http",
							"host": [
								"10",
								"0",
								"131",
								"21"
							],
							"path": [
								"ATLP",
								"IC",
								"API",
								"api",
								"Customs",
								"lookup",
								"CurrencyRates"
							],
							"query": [
								{
									"key": "getCurrencyRates",
									"value": ""
								}
							]
						},
						"description": "This is lookup to get all the currency exchange rates. This is same as \"GetCurrencyRates\" API from TAMM services"
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "GetJobList_ShipmentInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);   \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Collecting all the necessary variables if we have any\", function () {\r",
									"    var json_data = pm.response.json().Msg;\r",
									"    //console.log(json_data);\r",
									"    if (json_data != null) {\r",
									"        pm.collectionVariables.set(\"doNumber\",pm.response.json().Data[0].DONumber);\r",
									"        pm.collectionVariables.set(\"masterBLNumber\",pm.response.json().Data[0].MasterBLNumber);\r",
									"        pm.collectionVariables.set(\"houseBLNumber\",pm.response.json().Data[0].HouseBLNumber);\r",
									"        pm.collectionVariables.set(\"agentCode\",pm.response.json().Data[0].AgentCode);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//for Broker\r\n{\r\n    \"profile\": \"\",\r\n    \"profileCode\": 404705,\r\n    \"draftId\": null,\r\n    \"centerCode\": \"\",\r\n    \"agentCode\": \"\",\r\n    \"doNumber\": \"\",\r\n    \"jobNumber\": null,\r\n    \"custBillNumber\": null,\r\n    \"billType\": \"\",\r\n    \"houseBLNumber\": \"\",\r\n    \"importerExporter\": null,\r\n    \"cargoType\": null,\r\n    \"masterBLNumber\": \"\",\r\n    \"voucherNo\": null,\r\n    \"containerNumber\": null,\r\n    \"chassisNumber\": null,\r\n    \"pageNumber\": null,\r\n    \"pageSize\": null,\r\n    \"orderBy\": null,\r\n    \"searchForDO\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetJobList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetJobList"
							]
						},
						"description": "This request will fetch the all the list of DOs (SEA Transport Mode) available for the clearing agent by providing the agent code, HBL, MBL. This is same as \"GetShipmentList\" API from TAMM services."
					},
					"response": []
				},
				{
					"name": "GetJobList_SeaDOs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);   \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n//for Trader\r\n{\r\n    \"profile\": \"CLEARING\",\r\n    \"profileCode\": null,\r\n    \"draftId\": null,\r\n    \"centerCode\": \"V\",\r\n    \"agentCode\": \"{{agentCode}}\",\r\n    \"doNumber\": \"{{doNumber}}\",\r\n    \"jobNumber\": null,\r\n    \"custBillNumber\": null,\r\n    \"billType\": null,\r\n    \"houseBLNumber\": \"{{houseBLNumber}}\",\r\n    \"importerExporter\": null,\r\n    \"cargoType\": null,\r\n    \"masterBLNumber\": \"{{masterBLNumber}}\",\r\n    \"voucherNo\": null,\r\n    \"containerNumber\": null,\r\n    \"chassisNumber\": null,\r\n    \"pageNumber\": null,\r\n    \"pageSize\": null,\r\n    \"orderBy\": null,\r\n    \"searchForDO\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetJobList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetJobList"
							]
						},
						"description": "This request will fetch the all the list of DOs (SEA Transport Mode) available for the clearing agent by providing the agent code, HBL, MBL. This is same as \"GetManifestInfo\" API from TAMM services."
					},
					"response": []
				},
				{
					"name": "GetManifestInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);   \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"CustomsCenterCode\": \"V\",\r\n    \"ShippingAgentCode\": \"{{agentCode}}\",\r\n    \"DONumber\": \"{{doNumber}}\",\r\n    \"HouseBLNumber\": \"{{houseBLNumber}}\",\r\n    \"MasterBLNumber\": \"{{masterBLNumber}}\"\r\n}\r\n/*\r\n{\r\n    \"CustomsCenterCode\": \"V\",\r\n    \"ShippingAgentCode\": \"A187\",\r\n    \"DONumber\": \"8546463\",\r\n    \"HouseBLNumber\": \"HB56\",\r\n    \"MasterBLNumber\": \"HU78\"\r\n}\r\n\r\n{\r\n    \"CustomsCenterCode\": \"V\",\r\n    \"ShippingAgentCode\": \"A187\",\r\n    \"DONumber\": \"843545\",\r\n    \"HouseBLNumber\": \"EMBBL86889\",\r\n    \"MasterBLNumber\": \"EHBL3455\"\r\n}\r\n*/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetManifestInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetManifestInfo"
							]
						},
						"description": "This request will fetch the all the list of DOs (SEA Transport Mode) available for the clearing agent by providing the agent code, HBL, MBL. This is same as \"GetManifestInfo\" API from TAMM services."
					},
					"response": []
				},
				{
					"name": "GetJobList_All Drafts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);   \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verifying that the response have at least one record \", function () {\r",
									"    pm.expect(pm.response.json().Data[0].DraftId).not.to.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//for Broker\r\n{\r\n    \"profile\": \"CLEARING\",\r\n    \"profileCode\": \"C031\",\r\n    \"draftId\": \"\",\r\n    \"centerCode\": \"K\",\r\n    \"agentCode\": \"\",\r\n    \"doNumber\": \"\",\r\n    \"jobNumber\": \"\",\r\n    \"custBillNumber\": \"\",\r\n    \"billType\": \"\",\r\n    \"houseBLNumber\": \"\",\r\n    \"importerExporter\": \"\",\r\n    \"cargoType\": \"\",\r\n    \"masterBLNumber\": \"\",\r\n    \"voucherNo\": \"\",\r\n    \"containerNumber\": \"\",\r\n    \"chassisNumber\": \"\",\r\n    \"pageNumber\": \"1\",\r\n    \"pageSize\": \"10\",\r\n    \"orderBy\": \"\",\r\n    \"searchForDO\": false\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetJobList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetJobList"
							]
						},
						"description": "This request will fetch the all the list of DOs (SEA Transport Mode) available for the clearing agent by providing the agent code, HBL, MBL. This is same as \"GetShipmentList\" API from TAMM services."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Shipment Details",
			"item": [
				{
					"name": "Drafts",
					"item": [
						{
							"name": "CreateDraftFromSea",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Collecting draftID for Sea Transport Mode\", function () {\r",
											"    pm.collectionVariables.set(\"draftID\",pm.response.json().Data.DraftId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Msg).to.eql(\"Draft Created Successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"description": "Profile code/Maqta Compnay Code",
										"type": "text"
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"description": "Logged in user code",
										"type": "text"
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"CustomsCenterCode\": \"V\",\r\n    \"ShippingAgentCode\": \"{{agentCode}}\",\r\n    \"DONumber\": \"{{doNumber}}\",\r\n    \"HouseBLNumber\": \"{{houseBLNumber}}\",\r\n    \"MasterBLNumber\": \"{{masterBLNumber}}\",\r\n    \"UAEId\": \"\",\r\n    \"ServiceCode\": \"\",\r\n    \"ImporterCode\": \"\",\r\n    \"ProfileCode\": \"C031\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Job/CreateDraftFromSea",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Job",
										"CreateDraftFromSea"
									]
								},
								"description": "This is to create the Draft for Sea Transport mode by providing the Agent Code, DO Number, House BL Number, Master BL Number. This is same as \"CreateDraft\" API from TAMM services."
							},
							"response": []
						},
						{
							"name": "UpdateDOBLInformation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"    pm.expect(pm.response.json().Data.Error).to.eql(null);\r",
											"    pm.collectionVariables.set(\"draftID\",pm.response.json().Data.DraftId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Msg).to.eql(\"Data retrieved successfully\");\r",
											"});\r",
											"/*\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Msg).to.eql(\"Draft Created Successfully\");\r",
											"});\r",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_datetime = new Date();\r",
											"//Verifying if the center code is for Sea Transport mode (L,V,M,S)\r",
											"if (pm.environment.get(\"CenterCode\") == \"L\" || pm.environment.get(\"CenterCode\") == \"V\" || pm.environment.get(\"CenterCode\") == \"M\" || pm.environment.get(\"CenterCode\") == \"S\") { \r",
											"    pm.variables.set(\"seaDraft\", pm.collectionVariables.get(\"draftID\"));\r",
											"    pm.variables.set(\"DONumber\", pm.collectionVariables.get(\"doNumber\"));\r",
											"    pm.variables.set(\"HBL\", pm.collectionVariables.get(\"houseBLNumber\"));\r",
											"    pm.variables.set(\"MBL\", pm.collectionVariables.get(\"masterBLNumber\"));\r",
											"}\r",
											"else {\r",
											"    pm.variables.set(\"seaDraft\", \"\");\r",
											"    pm.variables.set(\"DONumber\", _.random(1010101,9898989));\r",
											"    pm.variables.set(\"HBL\", \"HBL\" + _.random(101010,989898));\r",
											"    pm.variables.set(\"MBL\", \"MBL\" + _.random(101010,989898));\r",
											"}\r",
											"\r",
											"pm.variables.set(\"voyageNumber\", \"VOY\" + _.random(101010,989898));\r",
											"pm.variables.set(\"DOWarningMessage\", \"Delivery order warning message for draft created on \" + current_datetime);\r",
											"pm.variables.set(\"DORemarks\", \"Delivery order remarks for draft created on \" + current_datetime);\r",
											"pm.variables.set(\"frieghtAmount\", _.random(101,9000));\r",
											"pm.variables.set(\"BLRemarks\", \"BOL remarks for draft\");\r",
											"pm.collectionVariables.set(\"Quantity\", _.random(1,9));\r",
											"pm.collectionVariables.set(\"NetWeight\",  _.random(1001,9999));\r",
											"pm.collectionVariables.set(\"GrossWeight\", pm.variables.get(\"NetWeight\") +  _.random(10,99));\r",
											"pm.variables.set(\"Volume\", _.random(10,50));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"42332\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"ProfileCode\": \"C031\",\r\n    \"CenterCode\": \"I\",\r\n    \"CenterNameEng\": \"\",\r\n    \"CenterNameArb\": \"\",\r\n    \"BillTypeCode\": \"{{BillType}}\",\r\n    \"BillTypeEngName\": \"\",\r\n    \"BillTypeArbName\": \"\",\r\n    \"DOClearingAgentCode\": \"C031\",\r\n    \"DOClearingAgentEngName\": \"MICCO\",\r\n    \"DOClearingAgentArbName\": \"مؤسسة ال\",\r\n    \"TempImportJob\": \"\",\r\n    \"BHAgentCode\": \"\",\r\n    \"BHClearingAgentEngName\": \"\",\r\n    \"BHClearingAgentArbName\": \"\",\r\n    \"DOCargoAgentCode\": \"A151\",\r\n    \"DOCargoAgentEngName\": \"A REYEMI CARGO CLEARING & MANAGEMENT SERIVES\",\r\n    \"DOCargoAgentArbName\": \"مؤسسة الريامى للشحن والتخليص\",\r\n    \"DONumber\": \"{{DONumber}}\",\r\n    \"DODate\": \"2020-10-15\",\r\n    \"DOExpiryDate\": \"2020-11-05T08:56:43.427Z\",\r\n    \"CarAgentCode\": \"\",\r\n    \"CarAgentEngName\": \"\",\r\n    \"CarAgentArbName\": \"\",\r\n    \"ImporterCode\": \"404705\",\r\n    \"ImporterEngName\": \"\",\r\n    \"ImporterArbName\": \"\",\r\n    \"CurrencyCode\": \"USD\",\r\n    \"CurrencyEng\": \"\",\r\n    \"CurrencyArb\": \"\",\r\n    \"ExchangeRate\": \"\",\r\n    \"PortCode\": \"AEJEA\",\r\n    \"PortNameEng\": \"\",\r\n    \"PortNameArb\": \"\",\r\n    \"HouseBLNumber\": \"{{HBL}}\",\r\n    \"MasterBLNumber\": \"{{MBL}}\",\r\n    \"KSACode\": \"\",\r\n    \"KSAEngName\": \"\",\r\n    \"KSAArbName\": \"\",\r\n    \"VoyageNumber\": \"{{voyageNumber}}\",\r\n    \"VoyageArrivalDate\": \"2020-10-07T15:03:14.286Z\",\r\n    \"VesselCode\": \"COSCO YAN\",\r\n    \"VesselNameEng\": \"COSCO YANTIAN\",\r\n    \"VesselNameArb\": \"COSCO YANTIAN\",\r\n    \"CargoTypeCode\": \"G\",\r\n    \"CargoTypeEng\": \"Cargo English\",\r\n    \"CargoTypeArb\": \"\",\r\n    \"ATACarnetFlag\": \"Y\",\r\n    \"InvoiceFlag\": \"Y\",\r\n    \"BillFlag\": \"Y\",\r\n    \"OrginFlag\": \"Y\",\r\n    \"PackingFlag\": \"Y\",\r\n    \"BHJobNumber\": \"\",\r\n    \"BHSharedVessel\": \"\",\r\n    \"UnitCode\": \"1000U\",\r\n    \"UnitNameEng\": \"1000 U\",\r\n    \"UnitNameArb\": \"1000 وحدة\",\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"JobNumber\": \"\",\r\n    \"StorageType\": \"S\",\r\n    \"ChannelResult\": \"\",\r\n    \"BH_GCC_EXIT_CENT\": \"\",\r\n    \"bhgccexistcenter\": \"\",\r\n    \"DOWarningMessage\": \"{{DOWarningMessage}}\",\r\n    \"DORemarks\": \"{{DORemarks}}\",\r\n    \"FreightAmount\": {{frieghtAmount}},\r\n    \"BHCustBlType\": \"\",\r\n    \"CustomerBillNumber\": \"\",\r\n    \"ShipperCode\":\"1\",\r\n    \"Shipper\": \"TEST\",\r\n    \"Consignee\": \"ALOTAIBI BANDER GHALEB M\",\r\n    \"NotifyParty\": \"\",\r\n    \"GoodDesc\": \"{{$randomProductName}},{{$randomProductName}},{{$randomProductName}},{{$randomProductName}}\",\r\n    \"MarksNo\": \"\",\r\n    \"BLRemarks\": \"{{BLRemarks}}\",\r\n    \"RocTrans\": \"\",\r\n    \"Quantity\": {{Quantity}},\r\n    \"GrossWeight\": {{NetWeight}},\r\n    \"NetWeight\": {{GrossWeight}},\r\n    \"Volume\": {{Volume}},\r\n    \"OldJobNumber\": \"\",\r\n    \"FanrReferenceNumber\": \"\",\r\n    \"TIRREFNumber\": \"\",\r\n    \"PullFromPreviousDeclaration\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/DeliveryOrder/UpdateDOBLInformation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"DeliveryOrder",
										"UpdateDOBLInformation"
									]
								},
								"description": "This is to create the Draft for Air and Land Transport mode by providing all the shipment details and also update the all the shipment details by providing the Draft ID for all transport modes. This is same as \"CreateDraft\" API from TAMM services."
							},
							"response": []
						},
						{
							"name": "DuplicateDeclaration(UpdateDOBLInfo)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Msg).to.eql(\"Data retrieved successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_datetime = new Date();\r",
											"//Verifying if the center code is for Sea Transport mode (L,V,M,S)\r",
											"if (pm.environment.get(\"CenterCode\") == \"L\" || pm.environment.get(\"CenterCode\") == \"V\" || pm.environment.get(\"CenterCode\") == \"M\" || pm.environment.get(\"CenterCode\") == \"S\") { \r",
											"    pm.variables.set(\"seaDraft\", pm.collectionVariables.get(\"draftID\"));\r",
											"    pm.variables.set(\"DONumber\", pm.collectionVariables.get(\"doNumber\"));\r",
											"    pm.variables.set(\"HBL\", pm.collectionVariables.get(\"houseBLNumber\"));\r",
											"    pm.variables.set(\"MBL\", pm.collectionVariables.get(\"masterBLNumber\"));\r",
											"}\r",
											"else {\r",
											"    pm.variables.set(\"seaDraft\", \"\");\r",
											"    pm.variables.set(\"DONumber\", _.random(1010101,9898989));\r",
											"    pm.variables.set(\"HBL\", \"HBL\" + _.random(101010,989898));\r",
											"    pm.variables.set(\"MBL\", \"MBL\" + _.random(101010,989898));\r",
											"}\r",
											"\r",
											"pm.variables.set(\"voyageNumber\", \"VOY\" + _.random(101010,989898));\r",
											"pm.variables.set(\"DOWarningMessage\", \"Delivery order warning message for draft created on \" + current_datetime);\r",
											"pm.variables.set(\"DORemarks\", \"Delivery order remarks for draft created on \" + current_datetime);\r",
											"pm.variables.set(\"frieghtAmount\", _.random(101,9000));\r",
											"pm.variables.set(\"BLRemarks\", \"BOL remarks for draft\");\r",
											"pm.collectionVariables.set(\"Quantity\", _.random(1,9));\r",
											"pm.collectionVariables.set(\"NetWeight\",  _.random(1001,9999));\r",
											"pm.collectionVariables.set(\"GrossWeight\", pm.variables.get(\"NetWeight\") +  _.random(10,99));\r",
											"pm.variables.set(\"Volume\", _.random(10,50));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"BillTypeCode\": \"O\",\r\n    \"JobNumber\": \"20002634\",\r\n    \"ImporterCode\": \"647367\",\r\n    \"draft_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"Profile\": \"CLEARING\",\r\n    \"ProfileCode\": \"C031\",\r\n    \"CenterCode\": \"G\",\r\n    \"DOClearingAgentCode\": \"C031\",\r\n    \"PullFromPreviousDeclaration\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/DeliveryOrder/UpdateDOBLInformation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"DeliveryOrder",
										"UpdateDOBLInformation"
									]
								},
								"description": "This is to create the duplicate Draft for Air and Land Transport mode by providing the previous declaration number. And also validating by the TAMM services ValidateImporterDelegation (ony for Clearing Agent) and ValidateDuplicateDeclaration."
							},
							"response": []
						},
						{
							"name": "GetDraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"    pm.expect(pm.response.json().Data.DeliveryOrder).not.to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text"
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/DeliveryOrder?draftId=42332",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"DeliveryOrder"
									],
									"query": [
										{
											"key": "draftId",
											"value": "{{draftID}}",
											"description": "Integer",
											"disabled": true
										},
										{
											"key": "draftId",
											"value": "42332"
										}
									]
								},
								"description": "This API fetches all the shipment details which we have updated for the created Draft for any transport mode by providing the Draft ID. This is same as \"GetDraft\" API from TAMM services."
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Vehicles",
					"item": [
						{
							"name": "SaveVehicle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Vehicle added Successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"truckNumber\", _.random(1001,9999)); //this will give four digit number\r",
											"//pm.collectionVariables.set(\"truckNumber\", 7304);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"TruckNumber\": \"{{truckNumber}}\",\r\n    \"TruckNationality\": \"test truck\",\r\n    \"TruckType\": \"6\",\r\n    \"TruckDriver\": \"8\",\r\n    \"DriverNationality\": \"9\",\r\n    \"PermitNumber\": 2121,\r\n    \"OldTruckNumber\": \"\",\r\n    \"OldTruckNationality\": \"\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Vehicle/SaveVehicle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Vehicle",
										"SaveVehicle"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetVehicleList",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"    pm.expect(pm.response.json().Data.Error).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.Trucks[0].TruckNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text"
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text"
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Vehicle/GetVehicleList?pageNumber=1&pageSize=20&draftId={{draftID}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Vehicle",
										"GetVehicleList"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										},
										{
											"key": "draftId",
											"value": "{{draftID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteVehicle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Vehicle deleted Successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"TruckNumber\": \"{{truckNumber}}\",\r\n    \"TruckNationality\": \"test truck\",\r\n    \"TruckType\": \"6\",\r\n    \"TruckDriver\": \"6\",\r\n    \"DriverNationality\": \"7\",\r\n    \"PermitNumber\": 2121,\r\n    \"OldTruckNumber\": \"{{truckNumber}}\",\r\n    \"OldTruckNationality\": \"test truck\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Vehicle/DeleteVehicle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Vehicle",
										"DeleteVehicle"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterVehicle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.PermitNumber).not.to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var chassis_num = _.random(1010101010, 9898989898)\r",
											"\r",
											"pm.variables.set(\"chassisNum\", \"CHASSISNUM\"+chassis_num);\r",
											"\r",
											"pm.variables.set(\"PlateNumber\", _.random(12121, 98989));\r",
											"pm.variables.set(\"PlateOrigin\", _.random(01, 99));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"CarColor\": \"White\",\r\n    \"CarEDate\": \"22/10/2021\",\r\n    \"CarT1Desc\": \"\",\r\n    \"CarT2Desc\": \"\",\r\n    \"CenterCode\": \"G\",\r\n    \"ChassisNumber\": \"{{chassisNum}}\",\r\n    \"CityCode\": \"\",\r\n    \"CityDesc\": \"\",\r\n    \"CompanyCode\": \"\",\r\n    \"DateClose\": \"\",\r\n    \"DateOpen\": \"\",\r\n    \"DestinationCountryClose\": 0,\r\n    \"DestinationCountryOpen\": 3,\r\n    \"Direction\": \"OPEN\",\r\n    \"DriverIDDateClose\": \"\",\r\n    \"DriverIDDateOpen\": \"22/10/2022\",\r\n    \"DriverIDNumberClose\": \"\",\r\n    \"DriverIDNumberOpen\": \"3423423424\",\r\n    \"DriverIDTypeClose\": \"\",\r\n    \"DriverIDTypeOpen\": \"PASSPORT\",\r\n    \"DriverNATClose\": 1,\r\n    \"DriverNATOpen\": 1,\r\n    \"DriverNameClose\": \"\",\r\n    \"DriverNameClose1\": \"\",\r\n    \"DriverNameClose2\": \"\",\r\n    \"DriverNameClose3\": \"\",\r\n    \"DriverNameClose4\": \"\",\r\n    \"DriverNameOpen\": \"{{$randomFirstName}} {{$randomLastName}}\",\r\n    \"DriverNameOpen1\": \"{{$randomFirstName}}\",\r\n    \"DriverNameOpen2\": \"{{$randomFirstName}}\",\r\n    \"DriverNameOpen3\": \"{{$randomLastName}}\",\r\n    \"DriverNameOpen4\": \"{{$randomLastName}}\",\r\n    \"GateSelection\": \"N\",\r\n    \"JobNumber\": null,\r\n    \"JobNumberClose\": null,\r\n    \"JobNumberOpen\": null,\r\n    \"LoadFlagClose\": \"N\",\r\n    \"LoadFlagOpen\": \"Y\",\r\n    \"LoadTypeClose\": \"\",\r\n    \"LoadTypeOpen\": \"TON 70 طن 70\",\r\n    \"OwnerName\": \"{{$randomFirstName}} {{$randomLastName}}\",\r\n    \"OwnerName1\": \"{{$randomFirstName}}\",\r\n    \"OwnerName2\": \"{{$randomFirstName}}\",\r\n    \"OwnerName3\": \"{{$randomLastName}}\",\r\n    \"OwnerName4\": \"{{$randomLastName}}\",\r\n    \"OwnerNationality\": 1,\r\n    \"PassangerNumberClose\": 0,\r\n    \"PassangerNumberOpen\": 1,\r\n    \"PermitNumber\": \"\",\r\n    \"PlateCategory\": 1,\r\n    \"PlateColor\": 1,\r\n    \"PlateNumber\": \"{{truckNumber}}\",\r\n    \"PlateOrigin\": \"{{PlateOrigin}}\",\r\n    \"PreRegistrationFlag\": \"{{$randomCountry}}\",\r\n    \"RemarksClose\": \"\",\r\n    \"RemarksOpen\": \"remarks open\",\r\n    \"TextDestinationCountryClose\": \"\",\r\n    \"TextDestinationCoutryOpen\": \"دبي\",\r\n    \"TextDriverNATOpen\": \"الامارات العربية المتحدة\",\r\n    \"TextDriverNationalityClose\": \"\",\r\n    \"TextOwnerNationality\": \"الامارات العربية المتحدة\",\r\n    \"TextPlateCategory\": \"خصوصي\",\r\n    \"TextPlateColor\": \"احمر\",\r\n    \"TextPlateOrigin\": \"المجر/هنغاريا\",\r\n    \"TextTransNumber\": \"\",\r\n    \"TextVehicleCategory\": \"حفاره بجنزير\",\r\n    \"TextVehicleType\": \"DX780\",\r\n    \"TrailerNumber\": \"UTWER78798\",\r\n    \"TripTicket\": \"WUEYRU897988\",\r\n    \"UserCode\": \"General Text\",\r\n    \"VCTCode\": 166,\r\n    \"VSTCode\": 1,\r\n    \"VehicleModel\": 2020,\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Vehicle/RegisterVehicle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Vehicle",
										"RegisterVehicle"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetRegisteredVehicleFromDraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var chassis_num = _.random(1010101010, 9898989898)\r",
											"\r",
											"pm.variables.set(\"chassisNum\", \"CHASSISNUM\"+chassis_num);\r",
											"\r",
											"pm.variables.set(\"PlateOrigin\", _.random(01, 99));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"PermitNumber\": 107616,\r\n    \"draft_id\": \"38353\",\r\n    \"service_code\": \"17\",\r\n    \"uae_id\": \"784197735942753\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Vehicle/GetRegisteredVehicleFromDraft",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Vehicle",
										"GetRegisteredVehicleFromDraft"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Goods",
					"item": [
						{
							"name": "AddUpdateGoodDesc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.SuccessMsg).to.eql(\"Good Description Added successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var chassis_num = _.random(10101, 98989)\r",
											"\r",
											"pm.variables.set(\"ADDDESC\", \"TESTDESC\"+chassis_num);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SerialNumber\": \"\",\r\n    \"Description\": \"{{ADDDESC}}\",\r\n    \"draft_id\": {{draftID}},\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/GoodDesc/AddUpdateGoodDesc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"GoodDesc",
										"AddUpdateGoodDesc"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetGoodDescList",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data[0].SerialNumber);\r",
											"    pm.collectionVariables.set(\"SerialNumber\", pm.response.json().Data[0].SerialNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customs/GoodDesc/GetGoodDescList?pageNumber=1&pageSize=20&draftId={{draftID}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"GoodDesc",
										"GetGoodDescList"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										},
										{
											"key": "draftId",
											"value": "{{draftID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteGoodDesc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.SuccessMsg).to.eql(\"Good Description Deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"SerialNumber\": {{SerialNumber}},\r\n  \"Description\": \"\",\r\n  \"draft_id\": \"{{draftID}}\",\r\n  \"service_code\": \"\",\r\n  \"uae_id\": \"\",\r\n  \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/GoodDesc/DeleteGoodDesc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"GoodDesc",
										"DeleteGoodDesc"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Chassis",
					"item": [
						{
							"name": "AddUpdateChassis",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var chassis_num = _.random(1010101010, 9898989898)\r",
											"\r",
											"pm.collectionVariables.set(\"chassisNumber\", \"CHASSISNUM\"+chassis_num);\r",
											"\r",
											"//console.log(chassis_num);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Chassis added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text"
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text"
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"ChassisNumber\": \"{{chassisNumber}}\",\r\n    \"EngineNumber\": \"cnksd\",\r\n    \"CountryCode\": \"27\",\r\n    \"CountryEngName\": \"jsjdcn\",\r\n    \"CountryArbName\": \"افغانستان\",\r\n    \"ModelYear\": 2017,\r\n    \"ColorCode\": \"1\",\r\n    \"ColorEngName\": \"jdsjnc\",\r\n    \"ColorArbName\": \"فضي مائي\",\r\n    \"PoliceColorCode\": \"1\",\r\n    \"PoliceColorEngName\": \"ygde\",\r\n    \"PoliceColorArbName\": \"ابيض\",\r\n    \"ChassisIssueFlag\": \"Y\",\r\n    \"ReExportFlag\": \"Y\",\r\n    \"VehicleSpecification\": \"tgy\",\r\n    \"BodyTypeCode\": \"123\",\r\n    \"BodyTypeEng\": \"\",\r\n    \"BodyTypeArb\": \"\",\r\n    \"SubTypeCode\": \"\",\r\n    \"SubEngName\": \"tewh\",\r\n    \"SubArbName\": \"\",\r\n    \"CategoryArb\": \"\",\r\n    \"CatgoryEng\": \"\",\r\n    \"TrafficNumber\": 12234,\r\n    \"UAEID\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"Cylinders\": 4,\r\n    \"PayLoad\": 2,\r\n    \"Weight\": 128,\r\n    \"NumberOfChairs\": 28,\r\n    \"PatrolType\": \"1\",\r\n    \"NumberOfDoors\": \"2\",\r\n    \"NumberOfWheels\": 4,\r\n    \"TransmissionType\": \"AUTO\",\r\n    \"NumberOfAxils\": \"2\",\r\n    \"EnginePower\": \"100\",\r\n    \"SteeringType\": \"POW\",\r\n    \"VehicleRemarks\": null,\r\n    \"AgentRemarks\": \"ORIGINAL CLEARANCE WITH CUSTOMS\",\r\n    \"CurrencyCode\": \"BAN\",\r\n    \"CurrenyEng\": \"BANGLADESH TAKKA\",\r\n    \"CurrencyArb\": \"تاكا بانغلادش\",\r\n    \"PriceCIF\": 1,\r\n    \"ExchangeRate\": null,\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"CenterCode\": \"M\",\r\n    \"TotalCount\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Chassis/AddUpdateChassis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Chassis",
										"AddUpdateChassis"
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkUploadChassis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Chassis added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var chassis_num = _.random(1010101010, 9898989898)\r",
											"pm.variables.set(\"chassisNum0\",\"CHASSISNUM\"+chassis_num);\r",
											"//console.log(chassis_num);\r",
											"\r",
											"var chassis_num = _.random(1010101010, 9898989898)\r",
											"pm.variables.set(\"chassisNum1\",\"CHASSISNUM\"+chassis_num);\r",
											"//console.log(chassis_num);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"chassises\": [\r\n        {\r\n            \"ChassisNumber\": \"{{chassisNum0}}\", //Mandatory field\r\n            \"EngineNumber\": \"E787\",\r\n            \"CountryCode\": null,\r\n            \"CountryEngName\": null,\r\n            \"CountryArbName\": null,\r\n            \"ModelYear\": 2016, //Mandatory field\r\n            \"ColorCode\": \"381\", //Mandatory field\r\n            \"ColorEngName\": \"Black\",\r\n            \"ColorArbName\": null,\r\n            \"PoliceColorCode\": \"1\",\r\n            \"PoliceColorEngName\": \"WHITE\",\r\n            \"PoliceColorArbName\": \"ابيض\",\r\n            \"ChassisIssueFlag\": \"Y\",\r\n            \"ReExportFlag\": \"Y\",\r\n            \"VehicleSpecification\": \"GCC\",\r\n            \"BodyTypeCode\": null,\r\n            \"BodyTypeEng\": null,\r\n            \"BodyTypeArb\": null,\r\n            \"SubTypeCode\": null,\r\n            \"SubEngName\": null,\r\n            \"SubArbName\": null,\r\n            \"CatgoryEng\": null,\r\n            \"CategoryArb\": null,\r\n            \"TrafficNumber\": null,\r\n            \"UAEID\": \"\",\r\n            \"uae_id\": \"\",\r\n            \"Cylinders\": 4,\r\n            \"PayLoad\": 2,\r\n            \"Weight\": 128,\r\n            \"NumberOfChairs\": 28,\r\n            \"PatrolType\": \"1\",\r\n            \"NumberOfDoors\": \"2\",\r\n            \"NumberOfWheels\": 4,\r\n            \"TransmissionType\": \"AUTO\",\r\n            \"NumberOfAxils\": 4,\r\n            \"EnginePower\": \"100\",\r\n            \"SteeringType\": \"POW\",\r\n            \"VehicleRemarks\": null,\r\n            \"AgentRemarks\": null,\r\n            \"CurrencyCode\": \"1\",\r\n            \"PriceCIF\": 1,\r\n            \"CurrenyEng\": null,\r\n            \"CurrencyArb\": null,\r\n            \"ExchangeRate\": null,\r\n            \"CompanyCode\": \"\",\r\n            \"UserCode\": \"\",\r\n            \"CenterCode\": \"M\",\r\n            \"TotalCount\": 0\r\n        },\r\n        {\r\n            \"ChassisNumber\": \"{{chassisNum1}}\", //Mandatory field\r\n            \"EngineNumber\": \"E787\",\r\n            \"CountryCode\": null,\r\n            \"CountryEngName\": null,\r\n            \"CountryArbName\": null,\r\n            \"ModelYear\": 2016, //Mandatory field\r\n            \"ColorCode\": \"381\", //Mandatory field\r\n            \"ColorEngName\": \"Black\",\r\n            \"ColorArbName\": null,\r\n            \"PoliceColorCode\": \"1\",\r\n            \"PoliceColorEngName\": \"WHITE\",\r\n            \"PoliceColorArbName\": \"ابيض\",\r\n            \"ChassisIssueFlag\": \"Y\",\r\n            \"ReExportFlag\": \"Y\",\r\n            \"VehicleSpecification\": \"GCC\",\r\n            \"BodyTypeCode\": null,\r\n            \"BodyTypeEng\": null,\r\n            \"BodyTypeArb\": null,\r\n            \"SubTypeCode\": null,\r\n            \"SubEngName\": null,\r\n            \"SubArbName\": null,\r\n            \"CatgoryEng\": null,\r\n            \"CategoryArb\": null,\r\n            \"TrafficNumber\": null,\r\n            \"UAEID\": \"\",\r\n            \"uae_id\": \"\",\r\n            \"Cylinders\": 4,\r\n            \"PayLoad\": 2,\r\n            \"Weight\": 128,\r\n            \"NumberOfChairs\": 28,\r\n            \"PatrolType\": \"1\",\r\n            \"NumberOfDoors\": \"2\",\r\n            \"NumberOfWheels\": 4,\r\n            \"TransmissionType\": \"AUTO\",\r\n            \"NumberOfAxils\": 4,\r\n            \"EnginePower\": \"100\",\r\n            \"SteeringType\": \"POW\",\r\n            \"VehicleRemarks\": null,\r\n            \"AgentRemarks\": null,\r\n            \"CurrencyCode\": \"1\",\r\n            \"PriceCIF\": 1,\r\n            \"CurrenyEng\": null,\r\n            \"CurrencyArb\": null,\r\n            \"ExchangeRate\": null,\r\n            \"CompanyCode\": \"\",\r\n            \"UserCode\": \"\",\r\n            \"CenterCode\": \"M\",\r\n            \"TotalCount\": 0\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Chassis/BulkUpload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Chassis",
										"BulkUpload"
									]
								}
							},
							"response": []
						},
						{
							"name": "ChassisDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.ChassisNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://10.0.131.21/ATLP/IC/API/api/Customs/Chassis/ChassisDetail?draftId={{draftID}}&chassisNumber={{chassisNumber}}",
									"protocol": "http",
									"host": [
										"10",
										"0",
										"131",
										"21"
									],
									"path": [
										"ATLP",
										"IC",
										"API",
										"api",
										"Customs",
										"Chassis",
										"ChassisDetail"
									],
									"query": [
										{
											"key": "draftId",
											"value": "{{draftID}}"
										},
										{
											"key": "chassisNumber",
											"value": "{{chassisNumber}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetChassisList",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data[0].ChassisNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Chassis/GetChassisList?pageNumber=1&pageSize=5&searchString=&draftId={{draftID}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Chassis",
										"GetChassisList"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "5"
										},
										{
											"key": "searchString",
											"value": ""
										},
										{
											"key": "draftId",
											"value": "{{draftID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteChassis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Chassis deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",              //Mandatory field\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"ChassisNumber\": \"{{chassisNumber}}\",   //Mandatory field\r\n    \"EngineNumber\": \"\",\r\n    \"CountryCode\": null,\r\n    \"CountryEngName\": null,\r\n    \"CountryArbName\": null,\r\n    \"ModelYear\": null,\r\n    \"ColorCode\": \"\",\r\n    \"ColorEngName\": \"\",\r\n    \"ColorArbName\": null,\r\n    \"PoliceColorCode\": \"\",\r\n    \"PoliceColorEngName\": \"\",\r\n    \"PoliceColorArbName\": \"\",\r\n    \"ChassisIssueFlag\": \"\",\r\n    \"ReExportFlag\": \"\",\r\n    \"VehicleSpecification\": \"\",\r\n    \"BodyTypeCode\": null,\r\n    \"BodyTypeEng\": null,\r\n    \"BodyTypeArb\": null,\r\n    \"SubTypeCode\": null,\r\n    \"SubEngName\": null,\r\n    \"SubArbName\": null,\r\n    \"CatgoryEng\": null,\r\n    \"CategoryArb\": null,\r\n    \"TrafficNumber\": null,\r\n    \"UAEID\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"Cylinders\": null,\r\n    \"PayLoad\": null,\r\n    \"Weight\": null,\r\n    \"NumberOfChairs\": null,\r\n    \"PatrolType\": \"\",\r\n    \"NumberOfDoors\": \"\",\r\n    \"NumberOfWheels\": null,\r\n    \"TransmissionType\": \"\",\r\n    \"NumberOfAxils\": null,\r\n    \"EnginePower\": \"\",\r\n    \"SteeringType\": \"\",\r\n    \"VehicleRemarks\": null,\r\n    \"AgentRemarks\": null,\r\n    \"CurrencyCode\": \"1\",\r\n    \"PriceCIF\": 1,\r\n    \"CurrenyEng\": null,\r\n    \"CurrencyArb\": null,\r\n    \"ExchangeRate\": null,\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"CenterCode\": \"\",\r\n    \"TotalCount\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Chassis/DeleteChassis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Chassis",
										"DeleteChassis"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Containers",
					"item": [
						{
							"name": "AddContainer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var random_4_digit_number = _.random(1001, 9999); //this will give four digit number\r",
											"pm.collectionVariables.set(\"containerNumber\", \"CONT123\" + random_4_digit_number); \r",
											"\r",
											"//console.log(random_4_digit_number);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Container added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"service_code\": \"\",\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"CenterCode\": \"\",\r\n    \"ContainerNumber\": \"{{containerNumber}}\",\r\n    \"SealNumber\": \"SEAL12345\",\r\n    \"Size\": 45,\r\n    \"Service\": \"SERVI\",\r\n    \"Weight\": \"100.45\",\r\n    \"Measure\": \"78\",\r\n    \"Remarks\": \"Testing Remarks\",\r\n    \"Channel\": \"GREEN\",\r\n    \"RowNumber\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/AddContainer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"AddContainer"
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkUploadContainer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var container_num = _.random(1010101, 9898989)\r",
											"pm.variables.set(\"container0\",\"CONT\"+container_num);\r",
											"//console.log(container_num);\r",
											"\r",
											"var container_num = _.random(1010101, 9898989)\r",
											"pm.variables.set(\"container1\",\"CONT\"+container_num);\r",
											"//console.log(container_num);\r",
											"\r",
											"var container_num = _.random(1010101, 9898989)\r",
											"pm.variables.set(\"container2\",\"CONT\"+container_num);\r",
											"//console.log(container_num);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Containers added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"containers\": [\r\n        {\r\n            \"ContainerNumber\": \"{{container0}}\",\r\n            \"SealNumber\": \"SEAL123456\",\r\n            \"Size\": 50,\r\n            \"Service\": \"SERVI\",\r\n            \"Weight\": \"105.45\",\r\n            \"Measure\": \"68.21\",\r\n            \"Remarks\": \"Updating remarks for container1\",\r\n            \"Channel\": \"RED\",\r\n            \"RowNumber\": 1\r\n        },\r\n        {\r\n            \"ContainerNumber\": \"{{container1}}\",\r\n            \"SealNumber\": \"SEAL123456\",\r\n            \"Size\": 50,\r\n            \"Service\": \"SERVI\",\r\n            \"Weight\": \"105.45\",\r\n            \"Measure\": \"68.21\",\r\n            \"Remarks\": \"Updating remarks for container1\",\r\n            \"Channel\": \"RED\",\r\n            \"RowNumber\": 1\r\n        }\r\n    ],\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/BulkUploadContainer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"BulkUploadContainer"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetContaniers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.ContainerNumber);\r",
											"    pm.collectionVariables.set(\"containerNumber\", pm.response.json().Data.Containers[0].ContainerNumber)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/GetContainers?searchString=&draftId={{draftID}}&pageNumber=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"GetContainers"
									],
									"query": [
										{
											"key": "searchString",
											"value": ""
										},
										{
											"key": "draftId",
											"value": "{{draftID}}"
										},
										{
											"key": "pageNumber",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateContainer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//var size = Math.floor(Math.random()*10 +1);\r",
											"//var weight = Math.floor(Math.random()*1000 +1);\r",
											"//var measure = Math.floor(Math.random()*100 +1);\r",
											"\r",
											"pm.variables.set(\"size\", Math.floor(Math.random()*10 +1)); //1 digit number\r",
											"pm.variables.set(\"weight\", Math.floor(Math.random()*1000 +1)); //3 digit number\r",
											"pm.variables.set(\"measure\", Math.floor(Math.random()*100 +1)); //2 digit number\r",
											"\r",
											"/*\r",
											"console.log(pm.variables.get(\"size\"));\r",
											"console.log(pm.variables.get(\"weight\"));\r",
											"console.log(pm.variables.get(\"measure\"));\r",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Container updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"service_code\": \"\",\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"CenterCode\": \"\",\r\n    \"ContainerNumber\": \"{{containerNumber}}\",\r\n    \"SealNumber\": \"SEAL12345\",\r\n    \"Size\": 45,\r\n    \"Service\": \"SERVI\",\r\n    \"Weight\": \"100.45\",\r\n    \"Measure\": \"78\",\r\n    \"Remarks\": \"Testing Remarks\",\r\n    \"Channel\": \"GREEN\",\r\n    \"RowNumber\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/UpdateContainer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"UpdateContainer"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteContainer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Container deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"service_code\": \"\",\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"CenterCode\": \"\",\r\n    \"ContainerNumber\": \"{{containerNumber}}\",\r\n    \"SealNumber\": \"SEAL12345\",\r\n    \"Size\": 45,\r\n    \"Service\": \"SERVICE\",\r\n    \"Weight\": \"100.45\",\r\n    \"Measure\": \"78\",\r\n    \"Remarks\": \"Testing Remarks\",\r\n    \"Channel\": \"GREEN\",\r\n    \"RowNumber\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/DeleteContainer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"DeleteContainer"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ATA Carnet",
					"item": [
						{
							"name": "AddUpdateATACarnet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var random_4_digit_number = _.random(1001, 9999); //this will give four digit number\r",
											"pm.collectionVariables.set(\"ATACarnetNumber\", \"RU/I/13/\" + random_4_digit_number); \r",
											"\r",
											"//console.log(random_4_digit_number);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.SuccessMsg).to.eql(\"ATA Carnet Added successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"ATACarnetNumber\": \"{{ATACarnetNumber}}\",\r\n    \"OldATACarnetNumber\": \"\",\r\n    \"ATAHolderAddress\": \"JSC KEMP\\nKRUPSKOY STR 55, KOVROV, VLADIMIR REGION, 601919, RUSSIAN FEDERATION\",\r\n    \"RepresentedBy\": \"JUMA AIRLINK LLC\\nPO BOX 27374\\nABU DHABI, UAE\",\r\n    \"CountryCode\": \"RUS\",\r\n    \"CountryDescEng\": \"RUSSIA\",\r\n    \"CountryDescArb\": \"روسيا\",\r\n    \"IntendedGoodsCode\": \"38\",\r\n    \"IntendedGoodsDescEng\": \"TOURIST CARS\",\r\n    \"IntendedGoodsDescArb\": \"TOURIST CARS\",\r\n    \"IssuedDate\": \"2018-11-14T00:00:00\",\r\n    \"IssuedBy\": \"CHAMBER OF COMMERCE AND INDUSTRY OF THE RUSSIAN FEDERATION\",\r\n    \"ValidUntilDate\": \"2019-11-12T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/ATACarnet/AddUpdateATACarnet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"ATACarnet",
										"AddUpdateATACarnet"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetATACarnet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customs/ATACarnet/GetATACarnet?pageNumber=1&pageSize=5&draftId=38791",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"ATACarnet",
										"GetATACarnet"
									],
									"query": [
										{
											"key": "draftId",
											"value": "{{draftID}}",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "5"
										},
										{
											"key": "draftId",
											"value": "38791"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteATACarnet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.SuccessMsg).to.eql(\"ATA Carnet deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"type": "text",
										"value": "2.0"
									},
									{
										"key": "CCode",
										"type": "text",
										"value": "{{companyCode}}",
										"disabled": true
									},
									{
										"key": "UCode",
										"type": "text",
										"value": "{{userName}}",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ATACarnetNumber\": \"{{ATACarnetNumber}}\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/ATACarnet/DeleteATACarnet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"ATACarnet",
										"DeleteATACarnet"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Document Upload",
					"item": [
						{
							"name": "SaveDocument",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var random_4_digit_number = _.random(1001, 9999); //this will give four digit number\r",
											"pm.collectionVariables.set(\"RefNumber\", random_4_digit_number); \r",
											"\r",
											"//console.log(random_4_digit_number);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Msg).to.eql(\"Document saved successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"FileName\": \"sampleTest2.pdf\",\r\n    \"MimeType\": \"application/pdf\",\r\n    \"FileData\": \"7b 0a 20 20 0a 20 20 22 53 65 72 69 61 6c 4e 75 6d 62 65 72 22 3a 20 22 31 32 32 33 30 22 2c 0a 20 20 22 44 65 73 63 72 69 70 74 69 6f 6e 22 3a 20 22 44 61 74 61 20 61 64 64 65 64 2f 20 55 70 64 61 74 65 64 2f 74 65 73 74 22 2c 0a 20 20 22 64 72 61 66 74 5f 69 64 22 3a 20 22 33 36 31 39 33 22 2c 0a 20 20 22 73 65 72 76 69 63 65 5f 63 6f 64 65 22 3a 20 22 22 2c 0a 20 20 22 75 61 65 5f 69 64 22 3a 20 22 22 2c 0a 20 20 22 69 6d 70 5f 63 6f 64 65 22 3a 20 22 22 0a 7d 7b 0a 20 20 0a 20 20 22 53 65 72 69 61 6c 4e 75 6d 62 65 72 22 3a 20 22 31 32 32 33 30 22 2c 0a 20 20 22 44 65 73 63 72 69 70 74 69 6f 6e 22 3a 20 22 44 61 74 61 20 61 64 64 65 64 2f 20 55 70 64 61 74 65 64 2f 74 65 73 74 22 2c 0a 20 20 22 64 72 61 66 74 5f 69 64 22 3a 20 22 33 36 31 39 33 22 2c 0a 20 20 22 73 65 72 76 69 63 65 5f 63 6f 64 65 22 3a 20 22 22 2c 0a 20 20 22 75 61 65 5f 69 64 22 3a 20 22 22 2c 0a 20 20 22 69 6d 70 5f 63 6f 64 65 22 3a 20 22 22 0a 7d\",\r\n    \"DraftId\": \"{{draftID}}\",\r\n    \"DocumentId\": \"\",\r\n    \"DocumentType\": \"بوليصة-BL\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/UploadDocument/SaveDocument",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"UploadDocument",
										"SaveDocument"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDocumentList",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Collect the uploaded document ID\", function () {\r",
											"    pm.collectionVariables.set(\"documentID\",pm.response.json().Data[0].ID);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"type": "text",
										"value": "2.0"
									},
									{
										"key": "CCode",
										"type": "text",
										"value": "{{companyCode}}",
										"disabled": true
									},
									{
										"key": "UCode",
										"type": "text",
										"value": "{{userName}}",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/UploadDocument/GetDocumentList?draftid={{draftID}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"UploadDocument",
										"GetDocumentList"
									],
									"query": [
										{
											"key": "draftid",
											"value": "{{draftID}}"
										},
										{
											"key": "draftid",
											"value": "41026",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteDocument",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"    pm.expect(pm.response.json().Success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Msg).to.eql(\"Document deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/UploadDocument/RemoveDocument?draftid={{draftID}}&documentId={{documentID}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"UploadDocument",
										"RemoveDocument"
									],
									"query": [
										{
											"key": "draftid",
											"value": "{{draftID}}"
										},
										{
											"key": "documentId",
											"value": "{{documentID}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Invoice",
			"item": [
				{
					"name": "CustBillInfo",
					"item": [
						{
							"name": "UpdateCustBillinfo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_datetime = new Date();\r",
											"pm.collectionVariables.set(\"Inv_CustBillNumber\", _.random(10101010,98989898));\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Invoice Group updated and saved successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"CustBillDate\": \"2020-10-20T13:59:09\",\r\n    \"AuditorDate\": \"2020-10-20T00:00:00\",\r\n    \"CurrentYear\": 2020,\r\n    \"CustBillNumber\": \"\",\r\n    \"CustBillType\": \"{{BillType}}\",\r\n    \"FromEmirates\": \"A\",\r\n    \"StatBillFlag\": \"N\",\r\n    \"MaqsaImportFlag\": \"\",\r\n    \"GCCNumber\": \"\",\r\n    \"GCCReference\": \"\",\r\n    \"GCCYear\": \"\",\r\n    \"GCCCenterCode\": \"\",\r\n    \"GCCCenterEngName\": \"\",\r\n    \"GCCCenterArbName\": \"\",\r\n    \"CountCode\": \"AUS\",\r\n    \"CountEngName\": \"AUSTRALIA\",\r\n    \"CountArbName\": \"استراليا\",\r\n    \"DestCountCode\": \"\",\r\n    \"DestCountEngName\": \"\",\r\n    \"DestCountArbName\": \"\",\r\n    \"Arabic1\": \"\",\r\n    \"Arabic2\": \"\",\r\n    \"Arabic3\": \"\",\r\n    \"ExitFlag\": \"\",\r\n    \"ExitDate\": \"\",\r\n    \"ExitPortCode\": \"\",\r\n    \"PortEngName\": \"\",\r\n    \"PortArbName\": \"\",\r\n    \"ExitRemarks\": \"\",\r\n    \"CreditCustCode\": \"\",\r\n    \"CreditCustEngName\": \"\",\r\n    \"CreditCustArbName\": \"\",\r\n    \"ExciseDecId\": \"\",\r\n    \"VoucherType\": \"2\",\r\n    \"Volume\": 100,\r\n    \"ReleaseDate\": \"2020-10-20T00:00:00\",\r\n    \"ImportBillNumber\": \"\",\r\n    \"OldJobNumber\": \"\",\r\n    \"FanrReferenceNumber\": \"\",\r\n    \"InvoiceGroups\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/UpdateCustBillinfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"UpdateCustBillinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCustBillInfo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having Custom Bill Info\", function () {\r",
											"    pm.expect(pm.response.json().Data.CountCode);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"draft_id\": \"{{draftID}}\",\r\n  \"uae_id\": \"\",\r\n  \"service_code\": \"\",\r\n  \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetCustBillInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetCustBillInfo"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Invoice Groups",
					"item": [
						{
							"name": "AddUpdateGroupCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.variables.set(\"freightAmount\", _.random(101, 999)); \r",
											"pm.variables.set(\"insuranceAmount\", _.random(10, 150)); \r",
											"pm.variables.set(\"invoiceRefNumber\", \"INV\" + _.random(101010, 989898)); \r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Invoice Group added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"service_code\": \"\",\r\n    \"SerialNumber\": \"820705\",\r\n    \"CountCode\": \"DZA\",\r\n    \"CountEngName\": \"ALGERIA\",\r\n    \"CountArbName\": \"الصين\",\r\n    \"InvoiceCurrCode\": \"USD\",\r\n    \"FreightAmount\": \"\",\r\n    \"CalculatedFreight\": 0,\r\n    \"FreightCurrency\": \"\",\r\n    \"InsuranceAmount\": \"{{insuranceAmount}}\",\r\n    \"OriginType\": \"O\",\r\n    \"OriginTypeDesc\": \"NOT APPLY\",\r\n    \"FreightType\": \"4\",\r\n    \"FreightDesc\": \"FOB\",\r\n    \"InvoiceRefNumber\": \"{{invoiceRefNumber}}\",\r\n    \"CustBillNumber\": \"\",\r\n    \"CustBillType\": \"{{BillType}}\",\r\n    \"InvoiceCenterCode\": \"V\",\r\n    \"CurrentYear\": 2020,\r\n    \"CenterCode\": \"V\",\r\n    \"InvoiceCurrEngName\": \"US-DOLLARS\",\r\n    \"InvoiceCurrArbName\": \"دولار امريكي\",\r\n    \"ExchangeRate\": \"3.673\",\r\n    \"FreightExRate\": \"\",\r\n    \"FreightCurrArbName\": \"\",\r\n    \"FreightCurrEngName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/AddUpdateGroupCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"AddUpdateGroupCategory"
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkUploadInvoice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.variables.set(\"invoiceNumber0\", _.random(101010, 989898));\r",
											"pm.variables.set(\"Quantity0\", _.random(1, 20)); \r",
											"pm.variables.set(\"NetWeight0\", _.random(1001, 9999)); \r",
											"pm.variables.set(\"GrossWeight0\", pm.variables.get(\"NetWeight0\")+ _.random(10, 150)); \r",
											"pm.variables.set(\"freightAmount0\", _.random(101, 999)); \r",
											"pm.variables.set(\"insuranceAmount0\", _.random(10, 150)); \r",
											"pm.variables.set(\"invoiceRefNumber0\", \"INV\" + _.random(101010, 989898)); \r",
											"pm.variables.set(\"invoiceAmount0\", _.random(1011, 9989)); \r",
											"\r",
											"pm.variables.set(\"invoiceNumber1\", _.random(101010, 989898));\r",
											"pm.variables.set(\"Quantity1\", _.random(1, 20)); \r",
											"pm.variables.set(\"NetWeight1\", _.random(1001, 9999)); \r",
											"pm.variables.set(\"GrossWeight1\", pm.variables.get(\"NetWeight1\")+ _.random(10, 150)); \r",
											"pm.variables.set(\"freightAmount1\", _.random(101, 999)); \r",
											"pm.variables.set(\"insuranceAmount1\", _.random(10, 150)); \r",
											"pm.variables.set(\"invoiceRefNumber1\", \"INV\" + _.random(101010, 989898)); \r",
											"pm.variables.set(\"invoiceAmount1\", _.random(1011, 9989)); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Invoices added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"type": "text",
										"value": "2.0"
									},
									{
										"key": "CCode",
										"type": "text",
										"value": "{{companyCode}}",
										"disabled": true
									},
									{
										"key": "UCode",
										"type": "text",
										"value": "{{userName}}",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Invoices\": [\r\n        {\r\n            \"InoviceNumber\": \"{{invoiceNumber0}}\",\r\n            \"HsCode\": \"87111000\",\r\n            \"Description\": \"Harmful goods\",\r\n            \"CountryOfOrigin\": \"IND\",\r\n            \"Quantity\": {{Quantity0}},\r\n            \"NetWeight\": {{NetWeight0}},\r\n            \"GrossWeight\": {{GrossWeight0}},\r\n            \"Currency\": \"OMR\",\r\n            \"Incoterm\": \"4\",\r\n            \"InvoiceAmount\": 100,\r\n            \"FreightAmount\": {{freightAmount0}},\r\n            \"FreightCurrency\": \"DHS\",\r\n            \"InsuranceAmount\": {{insuranceAmount0}},\r\n            \"InvoiceRefNumber\": \"{{invoiceRefNumber0}}\"\r\n        },\r\n        {\r\n            \"InoviceNumber\": \"{{invoiceNumber1}}\",\r\n            \"HsCode\": \"87111000\",\r\n            \"Description\": \"Resticted Goods\",\r\n            \"CountryOfOrigin\": \"IND\",\r\n            \"Quantity\": {{Quantity1}},\r\n            \"NetWeight\": {{NetWeight1}},\r\n            \"GrossWeight\": {{GrossWeight1}},\r\n            \"Currency\": \"OMR\",\r\n            \"Incoterm\": \"4\",\r\n            \"InvoiceAmount\": 100,\r\n            \"FreightAmount\": {{freightAmount1}},\r\n            \"FreightCurrency\": \"DHS\",\r\n            \"InsuranceAmount\": {{insuranceAmount1}},\r\n            \"InvoiceRefNumber\": \"{{invoiceRefNumber1}}\"\r\n        }\r\n    ],\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/BulkUploadInvoice",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"BulkUploadInvoice"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCustBillInfo_Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record for Group category\", function () {\r",
											"    pm.expect(pm.response.json().Data.InvoiceGroups[0].SerialNumber);\r",
											"});\r",
											"\r",
											"//This one will get only after AddUpdateGroupCategroy runs\r",
											"pm.test(\"Capturing the Serial Number from response of Group category\", function (){\r",
											"    pm.collectionVariables.set(\"Inv_GroupSerialNo\",pm.response.json().Data.InvoiceGroups[0].SerialNumber);\r",
											"    //console.log(pm.collectionVariables.get(\"Inv_GroupSerialNo\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"draft_id\": \"{{draftID}}\",\r\n  \"uae_id\": \"\",\r\n  \"service_code\": \"\",\r\n  \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetCustBillInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetCustBillInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddUpdateGroupDetail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.variables.set(\"itemNumber\", _.random(101, 999));\r",
											"pm.variables.set(\"Quantity\", _.random(1, 50)); \r",
											"//pm.variables.set(\"netWeight\", _.random(1001, 9999)); \r",
											"//pm.variables.set(\"grossWeight\", pm.variables.get(\"netWeight\")+_.random(100,500)); \r",
											"pm.variables.set(\"amount\", _.random(101, 999)); \r",
											"pm.variables.set(\"CifInDirhams\", _.random(10, 99)); \r",
											"\r",
											"pm.variables.set(\"DutyPercent\", _.random(1,9)); \r",
											"pm.variables.set(\"CifInDirhams\", _.random(10, 99)); \r",
											"\r",
											"pm.variables.set(\"FreightAmount\", _.random(100, 999)); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Invoice Detail added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"Item\": \"{{itemNumber}}\",\r\n    \"BillDetailSerialNumber\": \"\",\r\n    \"HarmonizedCode\": \"87111000\",\r\n    \"HarmDescription\": \"WITH RECIPROCATING INTERNAL COMBUSTION PISTON ENGINE OF A CYLINDER CAPACITY NOT EXCEEDING 50 CC مجهزة بمحركات ذات مكابس متناوبة للأشتعال الداخلي لا تزيد سعة اسطواناتها عن 50 سم3\",\r\n    \"HarmonizeArbName\": \"HarmonizeArbName\",\r\n    \"HarmonizeCodeShort\": \"\",\r\n    \"HarmonizeEngName\": \"HarmonizeEngName\",\r\n    \"IsHazardous\": \"Y\",\r\n    \"LocalRate\": \"3\",\r\n    \"Quantity\": {{Quantity}},\r\n    \"NetWeight\": {{NetWeight}},\r\n    \"GrossWeight\": {{GrossWeight}},\r\n    \"Amount\": {{amount}},\r\n    \"CifInDirhams\": 422.4,\r\n    \"DutyInDihrams\": 22,\r\n    \"OriginExportCode\": \"\",\r\n    \"OriginExpEngCode\": \"\",\r\n    \"OriginExpArbCode\": \"\",\r\n    \"UnitCode\": \"KG\",\r\n    \"DutyPercent\": {{DutyPercent}},\r\n    \"CustBillNumber\": \"\",\r\n    \"FreightAmount\": \"\",\r\n    \"BhCurrentYear\": 2020,\r\n    \"GroupCustBillNumber\": \"\",\r\n    \"CustBillType\": \"{{BillType}}\",\r\n    \"InvoiceCenterCode\": \"V\",\r\n    \"GroupSerialNo\": {{Inv_GroupSerialNo}},\r\n    \"InvoiceSerialNo\": \"\",\r\n    \"BillType\": \"{{BillType}}\",\r\n    \"CBIDutyPercent\": \"4\",\r\n    \"FederalRate\": \"5\",\r\n    \"FTAHarmCode\": \"889789fta\",\r\n    \"FTAHarmDescArb\": \"FTA Arb DEsc\",\r\n    \"FTAHarmDescEng\": \"FTA Eng DEsc\",\r\n    \"ProhibitionAuthority\" : \"prohibition\",\r\n    \"RestrictionAuthority\" : \"restriction\",\r\n    \"SitID\": \"123\",\r\n    \"TarrifYear\": \"2020\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/AddUpdateGroupDetail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"AddUpdateGroupDetail"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCustBillInfo_GroupDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record for Group category\", function () {\r",
											"    pm.expect(pm.response.json().Data.InvoiceGroups[0].CustBillInvoices[0].BillDetailSerialNumber);\r",
											"});\r",
											"\r",
											"//This one will get only after AddUpdateGroupDetail runs\r",
											"pm.test(\"Capturing the Bill Detail Serial Number from response of CustBillInvoices\", function (){\r",
											"    pm.collectionVariables.set(\"Inv_BillDetailSerialNumber\",pm.response.json().Data.InvoiceGroups[0].CustBillInvoices[0].BillDetailSerialNumber);\r",
											"    //console.log(pm.collectionVariables.get(\"Inv_BillDetailSerialNumber\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"draft_id\": \"{{draftID}}\",\r\n  \"uae_id\": \"\",\r\n  \"service_code\": \"\",\r\n  \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetCustBillInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetCustBillInfo"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Exemption Info",
					"item": [
						{
							"name": "AddUpdateExemptionInfo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"Inv_ExemptionCode\", _.random(2, 99));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Group Exemption updated and saved successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"Attrib1\": \"\",\r\n    \"Attrib2\": \"\",\r\n    \"Attrib3\": \"\",\r\n    \"Attrib4\": \"\",\r\n    \"Attrib5\": \"\",\r\n    \"Attrib6\": \"\",\r\n    \"Attrib7\": \"\",\r\n    \"Attrib8\": \"\",\r\n    \"Attrib9\": \"\",\r\n    \"Attrib10\": \"\",\r\n    \"Attrib11\": \"\",\r\n    \"Attrib12\": \"\",\r\n    \"Attrib13\": \"\",\r\n    \"CountryCode\": \"SAU\",\r\n    \"ExemptionCode\": \"{{Inv_ExemptionCode}}\",\r\n    \"CountryDesc\": \"السعودية-SAUDI ARABIA\",\r\n    \"FirstEntryPoint\": \"King Abdulaziz Seaport1\",\r\n    \"ID\": \"\",\r\n    \"Function\": \"\",\r\n    \"DutyAmount\": \"\",\r\n    \"BillNumber\": \"{{Inv_BillDetailSerialNumber}}\",\r\n    \"Date\": \"\",\r\n    \"BillCIFAmount\": null,\r\n    \"StatNum\": \"\",\r\n    \"StatDate\": \"\",\r\n    \"StatCIFAmount\": null,\r\n    \"SerialNo\": \"{{Inv_GroupSerialNo}}\" //Inv_GroupSerialNumber\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/AddUpdateExemptionInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"AddUpdateExemptionInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetGroupExemptionInfo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record for exemptions\", function () {\r",
											"    pm.expect(pm.response.json().Data.ExemptionCode).not.to.equal(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ExemptionCode\": \"{{Inv_ExemptionCode}}\",\r\n    \"GccNumber\" : \"\",\r\n    \"CenterCode\": \"{{CenterCode}}\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetGroupExemptionInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetGroupExemptionInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteExemptionInfo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Group Exemption deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"Attrib1\": \"\",\r\n    \"Attrib2\": \"\",\r\n    \"Attrib3\": \"\",\r\n    \"Attrib4\": \"\",\r\n    \"Attrib5\": \"\",\r\n    \"Attrib6\": \"\",\r\n    \"Attrib7\": \"\",\r\n    \"Attrib8\": \"\",\r\n    \"Attrib9\": \"\",\r\n    \"Attrib10\": \"\",\r\n    \"Attrib11\": \"\",\r\n    \"Attrib12\": \"\",\r\n    \"Attrib13\": \"\",\r\n    \"CountryCode\": \"SAU\",\r\n    \"ExemptionCode\": \"{{Inv_ExemptionCode}}\",\r\n    \"CountryDesc\": \"السعودية-SAUDI ARABIA\",\r\n    \"FirstEntryPoint\": \"King Abdulaziz Seaport1\",\r\n    \"ID\": \"\",\r\n    \"Function\": \"\",\r\n    \"DutyAmount\": \"\",\r\n    \"BillNumber\": \"{{Inv_BillDetailSerialNumber}}\",\r\n    \"Date\": \"\",\r\n    \"BillCIFAmount\": null,\r\n    \"StatNum\": \"\",\r\n    \"StatDate\": \"\",\r\n    \"StatCIFAmount\": null,\r\n    \"SerialNo\": \"{{Inv_GroupSerialNo}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/DeleteExemptionInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"DeleteExemptionInfo"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "HazardousItem",
					"item": [
						{
							"name": "AddUpdateHazardousItem",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"materialID\", _.random(101, 999)); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Hazardous Item added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AdditionalInbfo\": null,\r\n    \"Amount\": 10,\r\n    \"ComID\": \"4453\",\r\n    \"CountryCode\": \"\",\r\n    \"CountryEng\": \"\",\r\n    \"CountryArb\": \"\",\r\n    \"GoodsClasssification\": \"Test Classification2\",\r\n    \"Gross\": 101,\r\n    \"HarmonizedCode\": \"20019021\",\r\n    \"MaterialDescription\": \"TEST17929\",\r\n    \"MaterialID\": \"{{materialID}}\",\r\n    \"MaterialNameArb\": \"Material Arb3\",\r\n    \"MaterialNameEng\": \"Material Eng2\",\r\n    \"PermitNumber\": \"123AB2\",\r\n    \"SerialNumber\": {{Inv_GroupSerialNo}},\r\n    \"Weight\": 67,\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/AddUpdateHazardousItem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"AddUpdateHazardousItem"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetHazardousList",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data[0].MaterialID);\r",
											"    pm.collectionVariables.set(\"materialID\",pm.response.json().Data[0].MaterialID);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"type": "text",
										"value": "2.0"
									},
									{
										"key": "CCode",
										"type": "text",
										"value": "{{companyCode}}",
										"disabled": true
									},
									{
										"key": "UCode",
										"type": "text",
										"value": "{{userName}}",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SerialNumber\": {{Inv_GroupSerialNo}},\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetHazardousList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetHazardousList"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteHazardousItem",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Hazardous Item deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"type": "text",
										"value": "2.0"
									},
									{
										"key": "CCode",
										"type": "text",
										"value": "{{companyCode}}",
										"disabled": true
									},
									{
										"key": "UCode",
										"type": "text",
										"value": "{{userName}}",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AdditionalInbfo\": null,\r\n    \"Amount\": \"\",\r\n    \"ComID\": \"\",\r\n    \"CountryCode\": \"\",\r\n    \"CountryEng\": \"\",\r\n    \"CountryArb\": \"\",\r\n    \"GoodsClasssification\": \"\",\r\n    \"Gross\": \"\",\r\n    \"HarmonizedCode\": \"\",\r\n    \"MaterialDescription\": \"\",\r\n    \"MaterialID\": \"{{materialID}}\",\r\n    \"MaterialNameArb\": \"Material Arb3\",\r\n    \"MaterialNameEng\": \"Material Eng2\",\r\n    \"PermitNumber\": \"\",\r\n    \"SerialNumber\": {{Inv_GroupSerialNo}},\r\n    \"Weight\": \"\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/DeleteHazardousItem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"DeleteHazardousItem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteGroup&Details",
					"item": [
						{
							"name": "DeleteGroupDetail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"uae_id\": \"\",\r\n    \"service_code\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"Item\": \"{{itemNumber}}\",\r\n    \"BillDetailSerialNumber\": \"{{Inv_BillDetailSerialNumber}}\",\r\n    \"HarmonizedCode\": \"87111000\",\r\n    \"HarmDescription\": \"WITH RECIPROCATING INTERNAL COMBUSTION PISTON ENGINE OF A CYLINDER CAPACITY NOT EXCEEDING 50 CC مجهزة بمحركات ذات مكابس متناوبة للأشتعال الداخلي لا تزيد سعة اسطواناتها عن 50 سم3\",\r\n    \"HarmonizeArbName\": \"HarmonizeArbName\",\r\n    \"HarmonizeCodeShort\": \"\",\r\n    \"HarmonizeEngName\": \"HarmonizeEngName\",\r\n    \"IsHazardous\": \"Y\",\r\n    \"LocalRate\": \"3\",\r\n    \"Quantity\": {{Quantity}},\r\n    \"NetWeight\": {{NetWeight}},\r\n    \"GrossWeight\": {{GrossWeight}},\r\n    \"Amount\": \"10\",\r\n    \"CifInDirhams\": 422.4,\r\n    \"DutyInDihrams\": 22,\r\n    \"OriginExportCode\": \"\",\r\n    \"OriginExpEngCode\": \"\",\r\n    \"OriginExpArbCode\": \"\",\r\n    \"UnitCode\": \"KG\",\r\n    \"DutyPercent\": 5,\r\n    \"CustBillNumber\": \"\",\r\n    \"FreightAmount\": \"\",\r\n    \"BhCurrentYear\": 2020,\r\n    \"GroupCustBillNumber\": \"\",\r\n    \"CustBillType\": \"\",\r\n    \"InvoiceCenterCode\": \"V\",\r\n    \"GroupSerialNo\": {{Inv_GroupSerialNo}},\r\n    \"InvoiceSerialNo\": \"\",\r\n    \"BillType\": \"{{BillType}}\",\r\n    \"CBIDutyPercent\": \"4\",\r\n    \"FederalRate\": \"5\",\r\n    \"FTAHarmCode\": \"\",\r\n    \"FTAHarmDescArb\": \"\",\r\n    \"FTAHarmDescEng\": \"\",\r\n    \"ProhibitionAuthority\" : \"prohibition\",\r\n    \"RestrictionAuthority\" : \"restriction\",\r\n    \"SitID\": \"123\",\r\n    \"TarrifYear\": \"2020\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/DeleteGroupDetail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"DeleteGroupDetail"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteGroupCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"serialNumber\": {{Inv_GroupSerialNo}},\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"service_code\": \"\",\r\n    \"currentYear\":2020,\r\n    \"custBillNumber\": \"\",\r\n    \"custBillType\": \"{{BillType}}\",\r\n    \"invoiceCenterCode\": \"V\",\r\n    \"countCode\": \"DFG\",\r\n    \"invoiceCurrCode\": \"DHS\",\r\n    \"freightType\": \"FOB\",\r\n    \"calculatedFreight\": 0,\r\n    \"freightCurrency\": \"DHS\",\r\n    \"freightAmount\": 100,\r\n    \"insuranceAmount\": 210,\r\n    \"originType\": \"A\",\r\n    \"invoiceRefNumber\": \"INV23423\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/DeleteGroupCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"DeleteGroupCategory"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Inspection",
					"item": [
						{
							"name": "AddUpdateInspection",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var random_8_digit_number = _.random(10010101, 98989898); //this will give 8 digit number\r",
											"pm.collectionVariables.set(\"RefNumber\", random_8_digit_number); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Inspection added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"oldReferenceNumber\": \"\",\r\n  \"referenceNumber\": \"{{RefNumber}}\",\r\n  \"draft_id\": \"{{draftID}}\",\r\n  \"service_code\": \"\",\r\n  \"uae_id\": \"\",\r\n  \"imp_code\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/AddUpdateInspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"AddUpdateInspection"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetInspectionList",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.Inspections[0].referenceNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"pagenumber\": 0,\r\n    \"pagesize\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetInspectionList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetInspectionList"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteInspection",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Inspection deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"oldReferenceNumber\": \"\",\r\n  \"referenceNumber\": \"{{RefNumber}}\",\r\n  \"draft_id\": \"{{draftID}}\",\r\n  \"service_code\": \"\",\r\n  \"uae_id\": \"\",\r\n  \"imp_code\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/DeleteInspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"DeleteInspection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Seal",
					"item": [
						{
							"name": "AddUpdateSeal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"sealNumber\", _.random(10101, 99898)); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Seal added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sealNumber\": \"{{sealNumber}}\",\r\n    \"oldSealNumber\": \"\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/AddUpdateSeal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"AddUpdateSeal"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetSealList",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.Seals[0].sealNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"pagenumber\": 0,\r\n    \"pagesize\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/GetSealList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"GetSealList"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteSeal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Seal deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sealNumber\": \"{{sealNumber}}\",\r\n    \"oldSealNumber\": \"\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/BillOfLading/DeleteSeal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"BillOfLading",
										"DeleteSeal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Charges",
					"item": [
						{
							"name": "AddUpdateCharges",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var itemCode = [\"LAL\",\"LCG\",\"LPR\",\"LYR\",\"MAT\",\"MVR\",\"NOC\",\"PAS\",\"PLT\",\"RED\",\"REG\",\"RSC\",\"RTC\",\"RTI\",\"RTX\",\"SEL\",\"SRD\",\"SRV\"]\r",
											"var array_length = itemCode.length;\r",
											"\r",
											"pm.collectionVariables.set(\"ChargesCode\",itemCode[_.random(0,array_length-1)]);\r",
											"\r",
											"pm.variables.set(\"Amount\", _.random(101, 300)); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Bill Charge added successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Code\": \"{{ChargesCode}}\",\r\n    \"Amount\": \"{{Amount}}\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"Units\": 2,\r\n    \"UnitPrice\": 100,\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/AddUpdateCharges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"AddUpdateCharges"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCustBillCharges",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
											"    pm.expect(pm.response.json().Data.BillCharges[0].Code);\r",
											"    pm.collectionVariables.set(\"ChargesCode\",pm.response.json().Data.BillCharges[0].Code);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"value": "2.0",
										"type": "text"
									},
									{
										"key": "CCode",
										"value": "{{companyCode}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UCode",
										"value": "{{userName}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"pagenumber\": 0,\r\n    \"pagesize\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/GetCustBillCharges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"GetCustBillCharges"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteCharges",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the response has no errors\", function () {\r",
											"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifying the success message\", function () {\r",
											"    pm.expect(pm.response.json().Data.Messages).to.eql(\"Bill Charges deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "mq-api-version",
										"type": "text",
										"value": "2.0"
									},
									{
										"key": "CCode",
										"type": "text",
										"value": "{{companyCode}}",
										"disabled": true
									},
									{
										"key": "UCode",
										"type": "text",
										"value": "{{userName}}",
										"disabled": true
									},
									{
										"key": "UPass",
										"value": "{{UAEID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Code\": \"{{ChargesCode}}\",\r\n    \"Amount\": \"\",\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customs/Invoice/DeleteCharges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customs",
										"Invoice",
										"DeleteCharges"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Jobs",
			"item": [
				{
					"name": "SaveDocument Before Submit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var random_4_digit_number = _.random(1001, 9999); //this will give four digit number\r",
									"pm.collectionVariables.set(\"RefNumber\", random_4_digit_number); \r",
									"\r",
									"//console.log(random_4_digit_number);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the success message\", function () {\r",
									"    pm.expect(pm.response.json().Msg).to.eql(\"Document saved successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							},
							{
								"key": "CCode",
								"value": "{{companyCode}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UCode",
								"value": "{{userName}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FileName\": \"sampleTest2.pdf\",\r\n    \"MimeType\": \"application/pdf\",\r\n    \"FileData\": \"7b 0a 20 20 0a 20 20 22 53 65 72 69 61 6c 4e 75 6d 62 65 72 22 3a 20 22 31 32 32 33 30 22 2c 0a 20 20 22 44 65 73 63 72 69 70 74 69 6f 6e 22 3a 20 22 44 61 74 61 20 61 64 64 65 64 2f 20 55 70 64 61 74 65 64 2f 74 65 73 74 22 2c 0a 20 20 22 64 72 61 66 74 5f 69 64 22 3a 20 22 33 36 31 39 33 22 2c 0a 20 20 22 73 65 72 76 69 63 65 5f 63 6f 64 65 22 3a 20 22 22 2c 0a 20 20 22 75 61 65 5f 69 64 22 3a 20 22 22 2c 0a 20 20 22 69 6d 70 5f 63 6f 64 65 22 3a 20 22 22 0a 7d 7b 0a 20 20 0a 20 20 22 53 65 72 69 61 6c 4e 75 6d 62 65 72 22 3a 20 22 31 32 32 33 30 22 2c 0a 20 20 22 44 65 73 63 72 69 70 74 69 6f 6e 22 3a 20 22 44 61 74 61 20 61 64 64 65 64 2f 20 55 70 64 61 74 65 64 2f 74 65 73 74 22 2c 0a 20 20 22 64 72 61 66 74 5f 69 64 22 3a 20 22 33 36 31 39 33 22 2c 0a 20 20 22 73 65 72 76 69 63 65 5f 63 6f 64 65 22 3a 20 22 22 2c 0a 20 20 22 75 61 65 5f 69 64 22 3a 20 22 22 2c 0a 20 20 22 69 6d 70 5f 63 6f 64 65 22 3a 20 22 22 0a 7d\",\r\n    \"DraftId\": \"{{draftID}}\",\r\n    \"DocumentId\": \"\",\r\n    \"DocumentType\": \"بوليصة-BL\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/UploadDocument/SaveDocument",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"UploadDocument",
								"SaveDocument"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDocument",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response is having atleast one record\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].DocumentId).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/UploadDocument/Submitdocument?draftId={{draftID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"UploadDocument",
								"Submitdocument"
							],
							"query": [
								{
									"key": "draftId",
									"value": "{{draftID}}"
								},
								{
									"key": "UAEId",
									"value": "784197735942753",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the success flag is true\", function () {\r",
									"    pm.expect(pm.response.json().Success).to.eql(true);\r",
									"    //pm.expect(pm.response.json().Data.jobId).not.to.eql(null);\r",
									"    //pm.collectionVariables.set(\"JobNumber\", pm.response.json().Data.jobId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draft_id\": \"{{draftID}}\",\r\n    \"service_code\": \"\",\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/CreateJob",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"CreateJob"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "GetDeclarationCharges",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.Data[0].DeclarationCode);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							},
							{
								"key": "CCode",
								"value": "{{companyCode}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UCode",
								"value": "{{userName}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Invoice/GetDeclarationCharges?jobNumber=20003642",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Invoice",
								"GetDeclarationCharges"
							],
							"query": [
								{
									"key": "jobNumber",
									"value": "20003642",
									"description": "20002240,16399808"
								},
								{
									"key": "jobNumber",
									"value": "{{JobNumber}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPaymentMethod",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having at least one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.PaymentMethods.PaymentMethodCode);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							},
							{
								"key": "CCode",
								"value": "{{companyCode}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UCode",
								"value": "{{userName}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Invoice/GetPaymentMethod?jobNumber=20003642",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Invoice",
								"GetPaymentMethod"
							],
							"query": [
								{
									"key": "jobNumber",
									"value": "20003642"
								},
								{
									"key": "jobNumber",
									"value": "{{JobNumber}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateUpdatePayment(Offline)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying that the payment API is working fine\", function () {\r",
									"    pm.expect(pm.response.json().payment_response.status_description_en).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"JobNumber\": \"20002358\",\r\n    \"ProfileCode\": \"C031\",\r\n    \"AmountPaid\": \"122\",\r\n    \"Service\": \"17\",\r\n    \"PaymentType\": \"2\",\r\n    \"PaymentStatus\": \"COMPLETED\",\r\n    \"TransactionId\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Invoice/CreateUpdatePayment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Invoice",
								"CreateUpdatePayment"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetJobStatus",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response is having atleast one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.processResponse.jobDetails.declarationStatus).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetJobStatus?jobNumber=20003642",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetJobStatus"
							],
							"query": [
								{
									"key": "jobNumber",
									"value": "20003642",
									"description": "20000840, 20002275, 20002281"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDeclarationDocuments",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Capture the Document ID and Document Type\", function () {\r",
									"    pm.collectionVariables.set(\"DocumentID\", pm.response.json().Data[0].DocumentId);\r",
									"    pm.collectionVariables.set(\"DocumentType\", pm.response.json().Data[0].DocumentType);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/job/GetDeclarationDocuments?jobNumber=20003340",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"job",
								"GetDeclarationDocuments"
							],
							"query": [
								{
									"key": "jobNumber",
									"value": "20003340"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PrintDeclarationDocument",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response is having atleast one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.GetServiceDocumentPDFResult).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"DocumentId\": \"{{DocumentID}}\",\r\n    \"DocumentType\": \"{{DocumentType}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/PrintDeclarationDocument",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"PrintDeclarationDocument"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel and Amend",
			"item": [
				{
					"name": "GetDraftForCancellationModification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Capture the internal draft ID\", function () {\r",
									"    pm.collectionVariables.set(\"internalDraftID\", pm.response.json().Data.DraftId);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*\t\r",
									"MODIFICATION_REQUEST\r",
									"CANCEL_REQUEST\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Type\": \"CANCEL_REQUEST\",\r\n    \"UserName\": \"\",\r\n    \"AgentCode\": \"C031\",\r\n    \"CustomsRegNumber\": \"\",\r\n    \"ServiceCode\": \"12\",\r\n    \"DeclarationNumber\": \"20002634\",\r\n    \"CenterCode\": \"G\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetDraftForCancellationModification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetDraftForCancellationModification"
							]
						},
						"description": "This API fetches all the shipment details which we have updated for the created Draft for any transport mode by providing the Draft ID. This is same as \"GetDraft\" API from TAMM services."
					},
					"response": []
				},
				{
					"name": "SaveRemarkForCancellationModification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the Success message in response\", function () {\r",
									"    pm.expect(pm.response.json().Msg).to.eql(\"Remarks saved for Draft Id: \" + pm.collectionVariables.get(\"internalDraftID\"));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"DraftId\": \"{{internalDraftID}}\",\r\n    \"Remarks\": \"37\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/SaveCancellationModificationRemarks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"SaveCancellationModificationRemarks"
							]
						},
						"description": "This API fetches all the shipment details which we have updated for the created Draft for any transport mode by providing the Draft ID. This is same as \"GetDraft\" API from TAMM services."
					},
					"response": []
				},
				{
					"name": "SaveDocument",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var random_4_digit_number = _.random(1001, 9999); //this will give four digit number\r",
									"pm.collectionVariables.set(\"RefNumber\", random_4_digit_number); \r",
									"\r",
									"//console.log(random_4_digit_number);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the success message\", function () {\r",
									"    pm.expect(pm.response.json().Msg).to.eql(\"Document saved successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							},
							{
								"key": "CCode",
								"value": "{{companyCode}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UCode",
								"value": "{{userName}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FileName\": \"sampleTest.pdf\",\r\n    \"MimeType\": \"application/pdf\",\r\n    \"FileData\": \"7b 0a 20 20 0a 20 20 22 53 65 72 69 61 6c 4e 75 6d 62 65 72 22 3a 20 22 31 32 32 33 30 22 2c 0a 20 20 22 44 65 73 63 72 69 70 74 69 6f 6e 22 3a 20 22 44 61 74 61 20 61 64 64 65 64 2f 20 55 70 64 61 74 65 64 2f 74 65 73 74 22 2c 0a 20 20 22 64 72 61 66 74 5f 69 64 22 3a 20 22 33 36 31 39 33 22 2c 0a 20 20 22 73 65 72 76 69 63 65 5f 63 6f 64 65 22 3a 20 22 22 2c 0a 20 20 22 75 61 65 5f 69 64 22 3a 20 22 22 2c 0a 20 20 22 69 6d 70 5f 63 6f 64 65 22 3a 20 22 22 0a 7d 7b 0a 20 20 0a 20 20 22 53 65 72 69 61 6c 4e 75 6d 62 65 72 22 3a 20 22 31 32 32 33 30 22 2c 0a 20 20 22 44 65 73 63 72 69 70 74 69 6f 6e 22 3a 20 22 44 61 74 61 20 61 64 64 65 64 2f 20 55 70 64 61 74 65 64 2f 74 65 73 74 22 2c 0a 20 20 22 64 72 61 66 74 5f 69 64 22 3a 20 22 33 36 31 39 33 22 2c 0a 20 20 22 73 65 72 76 69 63 65 5f 63 6f 64 65 22 3a 20 22 22 2c 0a 20 20 22 75 61 65 5f 69 64 22 3a 20 22 22 2c 0a 20 20 22 69 6d 70 5f 63 6f 64 65 22 3a 20 22 22 0a 7d\",\r\n    \"DraftId\": \"{{internalDraftID}}\",\r\n    \"DocumentId\": \"\",\r\n    \"DocumentType\": \"بوليصة-BL\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/UploadDocument/SaveDocument",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"UploadDocument",
								"SaveDocument"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubmitDocumentCancellationModification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has atleast one document\", function () {\r",
									"    pm.expect(pm.response.json().Data.Documents[0].DocumentID).not.to.eql(null);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*\t\r",
									"MODIFICATION_REQUEST\r",
									"CANCEL_REQUEST\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AgentCode\": \"C031\",\r\n    \"ImporterCode\": \"\",\r\n    \"JobNumber\": \"20002319\",\r\n    \"UAEId\": \"784197735942753\",\r\n    \"Remarks\": 37,\r\n    \"Type\": \"CANCEL_REQUEST\",\r\n    \"InternalDraftId\": \"{{internalDraftID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/UploadDocument/SubmitDocumentCancellationModification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"UploadDocument",
								"SubmitDocumentCancellationModification"
							]
						},
						"description": "VoucherDeleteUpdateRequest"
					},
					"response": []
				},
				{
					"name": "GetApplicationCharges",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has DO section\", function () {\r",
									"    pm.expect(pm.response.json().Data.ChargesList.ChargesDetail.ChargesAmount).not.to.eql(null);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Invoice/GetApplicationCharges?serviceCode=12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Invoice",
								"GetApplicationCharges"
							],
							"query": [
								{
									"key": "serviceCode",
									"value": "12",
									"description": "12-Cancellation & 13-Modification"
								}
							]
						},
						"description": "GetApplicationCharges"
					},
					"response": []
				},
				{
					"name": "GetApplicationStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the application status code is not null\", function () {\r",
									"    pm.expect(pm.response.json().Data.ApplicationStatusCode).not.to.eql(null);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetApplicationStatus?applicationReferenceNumber=REQ_114914",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetApplicationStatus"
							],
							"query": [
								{
									"key": "applicationReferenceNumber",
									"value": "REQ_114914"
								}
							]
						},
						"description": "GetApplictionRequestStatus"
					},
					"response": []
				},
				{
					"name": "CancellationModificationPayment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"JobNumber\": \"20002319\",\r\n    \"ProfileCode\": \"C031\",\r\n    \"AmountPaid\": \"25\",\r\n    \"Service\": \"12\",  //12-Cancellation 13-MOdification\r\n    \"PaymentType\": \"1\",\r\n    \"PaymentStatus\" : \"COMPLETED\", //'APPROVED' - offline, 'CAPTURED' - online\r\n    \"TransactionId\" : \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://10.0.131.21/ATLP/IC/API/api/Customs/job/CancellationModificationPayment",
							"protocol": "http",
							"host": [
								"10",
								"0",
								"131",
								"21"
							],
							"path": [
								"ATLP",
								"IC",
								"API",
								"api",
								"Customs",
								"job",
								"CancellationModificationPayment"
							]
						},
						"description": "ProcessFeePayment"
					},
					"response": []
				}
			]
		},
		{
			"name": "Maqasa",
			"item": [
				{
					"name": "GetReExportContanier",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response is having atleast one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.Containers[0].ContainerNumber).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"MaqasaContainerRequest\": {\r\n        \"P_JOB_NO\": 20002310,\r\n        \"P_SERVICE_CODE\": \"\"\r\n    },\r\n    \"PageNumber\": 0,\r\n    \"PageSize\": 10,\r\n    \"SearchString\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/ReExport/GetReExportContainer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"ReExport",
								"GetReExportContainer"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetReExportCargo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response is having atleast one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.ManifestItems[0].Description).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"P_JOB_NO\": 20002411,\r\n    \"SearchString\": \"\",\r\n    \"PageNumber\": 0,\r\n    \"PageSize\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/ReExport/GetReExportCargo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"ReExport",
								"GetReExportCargo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetReExportChassis",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response is having atleast one record\", function () {\r",
									"    pm.expect(pm.response.json().Data.Chassis[0].ChassisNumber).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"GetMaqasaChassisInvRequest\": {\r\n        \"P_JOB_NO\": 20002698,\r\n        \"P_SERVICE_CODE\": \"\"\r\n    },\r\n    \"PageNumber\": 1,\r\n    \"PageSize\": 10,\r\n    \"SearchString\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/ReExport/GetReExportChassis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"ReExport",
								"GetReExportChassis"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetReExportInvoices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response must be having Custom Bill Info\", function () {\r",
									"    pm.expect(pm.response.json().Data[0].BDSerialNumber);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"GetMaqasaItemsRequest\": {\r\n        \"P_JOB_NO\": 20002602,\r\n        \"P_SERVICE_CODE\": \"20\"\r\n    },\r\n    \"PageNumber\": 1,\r\n    \"PageSize\": 10,\r\n    \"SearchString\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/ReExport/GetReExportInvoices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"ReExport",
								"GetReExportInvoices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMaqasaDeclaration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Get the Maqasa DraftId\", function () {\r",
									"    pm.collectionVariables.set(\"draftID_Maqasa\", (pm.response.json().Data.DraftId));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}"
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}"
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ImporterCode\": \"404705\",\r\n    \"DeclarationNumber\": \"20002602\",\r\n    \"DeclarationType\": \"I\",\r\n    \"ExportCenter\": \"\",\r\n    \"ProfileCode\": \"C031\",\r\n    \"CenterCode\": \"{{CenterCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/ReExport/GetMaqasaDeclaration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"ReExport",
								"GetMaqasaDeclaration"
							]
						}
					},
					"response": []
				},
				{
					"name": "SaveMaqasaDraftDeclaration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify the Success message in response\", function () {\r",
									"    pm.expect(pm.response.json().Msg).to.eql(\"Maqasa Draft added successfully.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"uae_id\": \"\",\r\n    \"imp_code\": \"\",\r\n    \"draft_id\": \"{{draftID_Maqasa}}\",\r\n    \"service_code\": \"\",\r\n    \"CompanyCode\": \"\",\r\n    \"UserCode\": \"\",\r\n    \"CenterCode\": \"S\",\r\n    \"ExitCenter\": \"\",\r\n    \"BillRefNumber\": null,\r\n    \"BillYear\": 2020,\r\n    \"BillCentCode\": \"V\",\r\n    \"CountryCode\": \"AFG\",\r\n    \"TotalCollected\": \"\",\r\n    \"ReExportBillDatInfo\": {\r\n        \"CountryCode\": \"AFG\",\r\n        \"DestCountryCode\": \"BHR\",\r\n        \"ArrivalDate\": \"11/06/2020\",\r\n        \"CargoType\": \"قيادة\",\r\n        \"Cargo\": \"Loaded\",\r\n        \"VoyageNumber\": \"VY877736578\",\r\n        \"VesselCode\": \"12\",\r\n        \"VesselCodeDescEng\": \"مجاري\",\r\n        \"VesselCodeDescArb\": \"مجاري\",\r\n        \"TruckNAT\": \"IND\",\r\n        \"TruckNatEng\": \"TRUCK INDIA\",\r\n        \"TruckNatArb\": \"TRUCK INDIA IN ARABIC\",\r\n        \"DriverNAT\": \"IND\",\r\n        \"DriverNatEng\": \"INDIA\",\r\n        \"DriverNatArb\": \"INDIA IN ARABIC\",\r\n        \"PortCode\": \"NLHTB\",\r\n        \"AgentCode\": \"C999\",\r\n        \"FCLFlag\": \"Q\",\r\n        \"ImpCode\": \"1199282\",\r\n        \"Consignee\": \"بيني مامين بابو موند\",\r\n        \"Shipper\": \"بيني مامين بابو موند\",\r\n        \"Quantity\": 200,\r\n        \"GrossWeight\": 200,\r\n        \"Volume\": null,\r\n        \"Weight\": 200,\r\n        \"UnitCode\": \"UNT\",\r\n        \"DOCargoAgentCode\": \"A91\",\r\n        \"DOCargoAgentEngName\": \"TETS NAME\",\r\n        \"DOCargoAgentArbName\": \"TEST IN ARABIC\"\r\n    },\r\n    \"ReExportContainerInfo\": [\r\n        {\r\n            \"ContainerNumber\": \"ASDE4454567\",\r\n            \"SealNumber\": \"65657\"\r\n        },\r\n        {\r\n            \"ContainerNumber\": \"SDER4454345\",\r\n            \"SealNumber\": \"67567\"\r\n        }\r\n    ],\r\n    \"ReExportCargoInfo\": [],\r\n    \"ReExportChassisInfo\": [\r\n        {\r\n            \"ChassisNumber\": \"CHS767\",\r\n            \"ChassisColorArbName\": null,\r\n            \"ChassisModelYear\": \"2020\",\r\n            \"VehicleTypeArb\": \"ايفيكو\",\r\n            \"SubTypeArbName\": \"افيكو راس تريلا A440ST\",\r\n            \"EngineNumber\": null,\r\n            \"CountryCode\": null,\r\n            \"CountryEngName\": null,\r\n            \"CountryArbName\": null,\r\n            \"ModelYear\": \"2020\",\r\n            \"ColorCode\": null,\r\n            \"ColorEngName\": null,\r\n            \"ColorArbName\": null,\r\n            \"ChassisIssueFlag\": null,\r\n            \"ReExportFlag\": null,\r\n            \"VehicleSpecification\": null,\r\n            \"BodyTypeCode\": \"2\",\r\n            \"BodyTypeEng\": \"IVECO\",\r\n            \"BodyTypeArb\": \"ايفيكو\",\r\n            \"SubTypeCode\": \"32\",\r\n            \"SubEngName\": \"IVECO TRAILER\",\r\n            \"SubArbName\": \"افيكو راس تريلا A440ST\",\r\n            \"CategoryEng\": null,\r\n            \"CategoryArb\": null,\r\n            \"TrafficNumber\": null,\r\n            \"Cylinders\": null,\r\n            \"PoliceColorCode\": null,\r\n            \"PoliceColorEngName\": null,\r\n            \"PoliceColorArbName\": null,\r\n            \"CatgoryEng\": null,\r\n            \"Uaeid\": null,\r\n            \"PayLoad\": null,\r\n            \"Weight\": null,\r\n            \"NumberOfChairs\": null,\r\n            \"PatrolType\": null,\r\n            \"NumberOfDoors\": null,\r\n            \"NumberOfWheels\": null,\r\n            \"TransmissionType\": null,\r\n            \"NumberOfAxils\": null,\r\n            \"EnginePower\": null,\r\n            \"SteeringType\": null,\r\n            \"VehicleRemarks\": null,\r\n            \"AgentRemarks\": null,\r\n            \"CurrencyCode\": \"BHD\",\r\n            \"PriceCIF\": 6576,\r\n            \"CurrenyEng\": \"BAHRAINI DINARS\",\r\n            \"CurrencyArb\": \"دينار بحريني\",\r\n            \"ExchangeRate\": null\r\n        },\r\n        {\r\n            \"ChassisNumber\": \"WER56465\",\r\n            \"ChassisColorArbName\": null,\r\n            \"ChassisModelYear\": \"2020\",\r\n            \"VehicleTypeArb\": \"ايفيكو\",\r\n            \"SubTypeArbName\": \"افيكو راس تريلا A440ST\",\r\n            \"EngineNumber\": null,\r\n            \"CountryCode\": null,\r\n            \"CountryEngName\": null,\r\n            \"CountryArbName\": null,\r\n            \"ModelYear\": \"2020\",\r\n            \"ColorCode\": null,\r\n            \"ColorEngName\": null,\r\n            \"ColorArbName\": null,\r\n            \"ChassisIssueFlag\": null,\r\n            \"ReExportFlag\": null,\r\n            \"VehicleSpecification\": null,\r\n            \"BodyTypeCode\": \"2\",\r\n            \"BodyTypeEng\": \"IVECO\",\r\n            \"BodyTypeArb\": \"ايفيكو\",\r\n            \"SubTypeCode\": \"32\",\r\n            \"SubEngName\": \"IVECO TRAILER\",\r\n            \"SubArbName\": \"افيكو راس تريلا A440ST\",\r\n            \"CategoryEng\": null,\r\n            \"CategoryArb\": null,\r\n            \"TrafficNumber\": null,\r\n            \"Cylinders\": null,\r\n            \"PoliceColorCode\": null,\r\n            \"PoliceColorEngName\": null,\r\n            \"PoliceColorArbName\": null,\r\n            \"CatgoryEng\": null,\r\n            \"Uaeid\": null,\r\n            \"PayLoad\": null,\r\n            \"Weight\": null,\r\n            \"NumberOfChairs\": null,\r\n            \"PatrolType\": null,\r\n            \"NumberOfDoors\": null,\r\n            \"NumberOfWheels\": null,\r\n            \"TransmissionType\": null,\r\n            \"NumberOfAxils\": null,\r\n            \"EnginePower\": null,\r\n            \"SteeringType\": null,\r\n            \"VehicleRemarks\": null,\r\n            \"AgentRemarks\": null,\r\n            \"CurrencyCode\": \"AUD\",\r\n            \"PriceCIF\": 65657,\r\n            \"CurrenyEng\": \"AUSTRALIAN DOLLARS\",\r\n            \"CurrencyArb\": \"دولار استرالي\",\r\n            \"ExchangeRate\": null\r\n        }\r\n    ],\r\n    \"ReExportInvoiceInfo\": [\r\n        {\r\n            \"BDSerialNumber\": \"5769918\",\r\n            \"BDCountryCode\": \"AUS\",\r\n            \"BDInvoiceCur\": \"AUD\",\r\n            \"BDInvoiceNo\": \"6567\",\r\n            \"BDFreightType\": \"1\",\r\n            \"BDFreightCur\": \"\",\r\n            \"BDFreightAmtFC\": \"0\",\r\n            \"BDInsuranceAmtFC\": \"\",\r\n            \"CbiBDSerialNo\": \"5769918\",\r\n            \"CbiSerialNo\": \"9266771\",\r\n            \"CbiSitHarmCode\": \"87111000\",\r\n            \"SitShortDescEng\": \"With reciprocating internal combustion piston engine of a cylinder capacity not exceeding 50 cc\",\r\n            \"SitShortDescArb\": \"مجهزة بمحركات ذات مكابس متناوبة للأشتعال الداخلي لا تزيد سعة اسطواناتها عن 50 سم3\",\r\n            \"HarmDesc\": \"With reciprocating internal combustion piston engine of a cylinder capacity not exceeding 50 cc\",\r\n            \"CbiQty\": \"100\",\r\n            \"CbiGrossWeight\": \"100\",\r\n            \"CbiWeight\": \"100\",\r\n            \"CbiAmountFC\": \"100\"\r\n        },\r\n        {\r\n            \"BDSerialNumber\": \"5769918\",\r\n            \"BDCountryCode\": \"AUS\",\r\n            \"BDInvoiceCur\": \"AUD\",\r\n            \"BDInvoiceNo\": \"6567\",\r\n            \"BDFreightType\": \"1\",\r\n            \"BDFreightCur\": \"\",\r\n            \"BDFreightAmtFC\": \"0\",\r\n            \"BDInsuranceAmtFC\": \"\",\r\n            \"CbiBDSerialNo\": \"5769918\",\r\n            \"CbiSerialNo\": \"9266772\",\r\n            \"CbiSitHarmCode\": \"84729030\",\r\n            \"SitShortDescEng\": \"- - - Pencil-sharpening machines\",\r\n            \"SitShortDescArb\": \"- - - أجهزة بري الأقلام\",\r\n            \"HarmDesc\": \"- - - Pencil-sharpening machines\",\r\n            \"CbiQty\": \"100\",\r\n            \"CbiGrossWeight\": \"100\",\r\n            \"CbiWeight\": \"100\",\r\n            \"CbiAmountFC\": \"100\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/ReExport/SaveMaqasaDraftDeclaration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"ReExport",
								"SaveMaqasaDraftDeclaration"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeliveryOrder_MaqasaDec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"    pm.expect(pm.response.json().Data.DeliveryOrder).not.to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"value": "2.0",
								"type": "text"
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/DeliveryOrder?draftId={{draftID_Maqasa}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"DeliveryOrder"
							],
							"query": [
								{
									"key": "draftId",
									"value": "{{draftID_Maqasa}}",
									"description": "Integer"
								},
								{
									"key": "draftId",
									"value": "37795",
									"disabled": true
								}
							]
						},
						"description": "This API fetches all the shipment details which we have updated for the created Draft for any transport mode by providing the Draft ID. This is same as \"GetDraft\" API from TAMM services."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "KSA Declaration",
			"item": [
				{
					"name": "GetKSADeclaration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Get the Maqasa DraftId\", function () {\r",
									"    pm.collectionVariables.set(\"draftID_KSA\", (pm.response.json().Data.DraftId));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "CCode",
								"type": "text",
								"value": "{{companyCode}}",
								"disabled": true
							},
							{
								"key": "UCode",
								"type": "text",
								"value": "{{userName}}",
								"disabled": true
							},
							{
								"key": "UPass",
								"value": "{{UAEID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ImporterCode\": \"\",\r\n    \"ImporterName\": \"\",\r\n    \"BillType\": \"I\",\r\n    \"DeclarationNumber\": 58549,\r\n    \"DeclarationType\": 4,\r\n    \"DeclarationDate\": \"2013-04-11\",\r\n    \"ProfileCode\": \"C031\",\r\n    \"CenterCode\": \"G\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/Job/GetKSADeclaration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"Job",
								"GetKSADeclaration"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeliveryOrder_KSADec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying the response has no errors\", function () {\r",
									"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
									"    pm.expect(pm.response.json().Data.DeliveryOrder).not.to.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mq-api-version",
								"type": "text",
								"value": "2.0"
							},
							{
								"key": "UPass",
								"type": "text",
								"value": "{{UAEID}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Customs/DeliveryOrder?draftId={{draftID_KSA}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Customs",
								"DeliveryOrder"
							],
							"query": [
								{
									"key": "draftId",
									"value": "{{draftID_KSA}}",
									"description": "Integer"
								},
								{
									"key": "draftId",
									"value": "37795",
									"disabled": true
								}
							]
						},
						"description": "This API fetches all the shipment details which we have updated for the created Draft for any transport mode by providing the Draft ID. This is same as \"GetDraft\" API from TAMM services."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "GetDraftDetail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifying the response has no errors\", function () {\r",
							"    pm.expect(pm.response.json().Errorlst).to.eql(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifying the response has DO section\", function () {\r",
							"    pm.expect(pm.response.json().Data.ManifestDeliveryOrders.DO.CenterCode).not.to.eql(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifying the response has BOL section\", function () {\r",
							"    pm.expect(pm.response.json().Data.ManifestDeliveryOrders.BOL.HouseBLNumber).not.to.eql(null);\r",
							"});\r",
							"pm.test(\"Verifying the response has CustBillHeaders section\", function () {\r",
							"    pm.expect(pm.response.json().Data.ManifestDeliveryOrders.CustBillHeaders.CountCode).not.to.eql(null);\r",
							"    pm.test(\"Verifying the response has CustBillDetails section\", function () {\r",
							"    pm.expect(pm.response.json().Data.ManifestDeliveryOrders.CustBillHeaders.CustBillDetails[0].SerialNumber).not.to.eql(null);   \r",
							"    });\r",
							"    pm.test(\"Verifying the response has CustBillInvoices section\", function () {\r",
							"    pm.expect(pm.response.json().Data.ManifestDeliveryOrders.CustBillHeaders.CustBillDetails[0].CUST_BILL_INVOICES[0].BillDetailSerialNumber).not.to.eql(null);   \r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "mq-api-version",
						"type": "text",
						"value": "2.0"
					},
					{
						"key": "UPass",
						"type": "text",
						"value": "{{UAEID}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Customs/Job/GetDraftDetail?draftId={{draftID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Customs",
						"Job",
						"GetDraftDetail"
					],
					"query": [
						{
							"key": "draftId",
							"value": "{{draftID}}"
						},
						{
							"key": "draftId",
							"value": "39018",
							"disabled": true
						}
					]
				},
				"description": "This API fetches all the shipment details which we have updated for the created Draft for any transport mode by providing the Draft ID. This is same as \"GetDraft\" API from TAMM services."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//Setting variable values",
					"",
					"",
					"",
					"",
					"/*",
					"//Request build starts from here",
					"const echoPostRequest = {",
					"  url: pm.variables.get(\"baseUrl\")+'api/token/SetAuthCookie',",
					"  method: 'POST',",
					"  header: {",
					"      'Content-Type': 'application/json'",
					"      //'mq-api-version':'2.0'",
					"  },",
					"  body: {",
					"    mode: 'raw',",
					"    raw: JSON.stringify(",
					"        {",
					"        \"userName\": \"shameem.pilathodan\", //usernames are shameem.pilathodan/OSAFFOURI",
					"        \"password\": \"P@ssw0rd\"",
					"        }",
					"    )",
					"  }",
					"};",
					"// Request build ends here",
					"",
					"//Sending the request starts here",
					"pm.sendRequest(echoPostRequest, (error, response) => {",
					"  if (error) {",
					"      //pm.cookies.add();",
					"      console.log(error ? error : response.json());",
					"      //console.log(error);",
					"  }",
					"});",
					"//Sending the request ends here",
					"*/"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "agentCode",
			"value": ""
		},
		{
			"key": "doNumber",
			"value": ""
		},
		{
			"key": "houseBLNumber",
			"value": ""
		},
		{
			"key": "masterBLNumber",
			"value": ""
		},
		{
			"key": "companyCode",
			"value": ""
		},
		{
			"key": "draftID",
			"value": ""
		},
		{
			"key": "chassisNumber",
			"value": ""
		},
		{
			"key": "SerialNumber",
			"value": ""
		},
		{
			"key": "containerNumber",
			"value": ""
		},
		{
			"key": "ATACarnetNumber",
			"value": ""
		},
		{
			"key": "Inv_RefNumber",
			"value": ""
		},
		{
			"key": "Inv_GroupSerialNo",
			"value": ""
		},
		{
			"key": "Inv_sealNumber",
			"value": ""
		},
		{
			"key": "Inv_BillDetailSerialNumber",
			"value": ""
		},
		{
			"key": "RefNumber",
			"value": ""
		},
		{
			"key": "documentID",
			"value": ""
		},
		{
			"key": "Inv_CustBillNumber",
			"value": ""
		},
		{
			"key": "materialID",
			"value": ""
		},
		{
			"key": "sealNumber",
			"value": ""
		},
		{
			"key": "ExemptionCode",
			"value": ""
		},
		{
			"key": "Inv_ExemptionCode",
			"value": ""
		},
		{
			"key": "HSCode",
			"value": ""
		},
		{
			"key": "ChargesCode",
			"value": ""
		},
		{
			"key": "JobNumber",
			"value": ""
		},
		{
			"key": "GrossWeight",
			"value": ""
		},
		{
			"key": "NetWeight",
			"value": ""
		},
		{
			"key": "Quantity",
			"value": ""
		},
		{
			"key": "CenterCode",
			"value": ""
		},
		{
			"key": "truckNumber",
			"value": ""
		},
		{
			"key": "UAEID",
			"value": ""
		},
		{
			"key": "draftID_Maqasa",
			"value": ""
		},
		{
			"key": "draftID_KSA",
			"value": ""
		},
		{
			"key": "internalDraftID",
			"value": ""
		},
		{
			"key": "ADDDESC",
			"value": ""
		},
		{
			"key": "DocumentID",
			"value": ""
		},
		{
			"key": "DocumentType",
			"value": ""
		},
		{
			"key": "itemNumber",
			"value": ""
		}
	]
}